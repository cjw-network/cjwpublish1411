#?ini charset="utf-8"?
# eZ Publish configuration file for error handling
#
# NOTE: It is not recommended to edit these files directly, instead
#       a file in override should be created for setting the
#       values that is required for your site. Either create
#       a file called settings/override/error.ini.append or
#       settings/override/error.ini.append.php for more security
#       in non-virtualhost modes (the .php file may already be present
#       and can be used for this purpose).

# The following error codes for kernel is currently defined
# 1  - Access denied
# 2  - Object not found
# 3  - Object not available
# 4  - Object has moved
# 20 - Module not found
# 21 - Module view not found
# 22 - Module or view disabled
# 50 - No DB connection

# Global error settings which are used for all error types
# A specific error type group is defined with ErrorSettings followed
# by a - (dash) and the error type name, e.g. ErrorSettting-kernel
[ErrorSettings]
# Which handler to use, possible handlers are:
# displayerror - Displays a text explaining the error
# redirect     - Redirect to a specific url
# rerun        - Rerun a module/view on the page, specified by a url
# embed        - Run a module/view and embed the results on the
#                same page used in displayerror
DefaultErrorHandler=displayerror
DefaultRedirectURL=/content/view/full/2
DefaultRerunURL=/content/view/full/2
DefaultEmbedURL=/user/login

# Error handling for kernel errors
[ErrorSettings-kernel]
# A list of error codes and which handler to use for it
# Overrides DefaultErrorHandler
# Example:
# What to do when a module does not exists, use either displayerror or redirect
# ErrorHandler[20]=displayerror
ErrorHandler[]
# A list of error codes and the url for redirection.
# Redirection tells the browser to choose another url for display.
# Overrides DefaultRedirectURL
# Example:
# Redirect to user/login if access was denied
# RedirectURL[1]=/user/login
RedirectURL[]
# A list of error codes and the url for rerunning.
# Rerunning means executing another module and view
# as though that module was specified in the browser url.
# Overrides DefaultRerunURL
# Example:
# Rerun user/login if access was denied
# RerunURL[1]=/user/login
RerunURL[]
# A list of error codes and the url for embedding.
# Embedding means running the module as in rerun but
# the result of the module is sent to the error template
# and embedded.
# Overrides DefaultEmbedURL
# Example:
# Embed user/login if access was denied
# EmbedURL[1]=/user/login
EmbedURL[]

# Set access denied to embed login
ErrorHandler[1]=embed
EmbedURL[1]=/user/login

# Defines the HTTP error code to use for the specified eZ Publish error code.
# The definition is HTTPError[eZ Publish error code]=HTTP error code.
# The HTTP error code must be defined with a HTTPError-code group as seen below.
# Example:
# Add 404 for module not found error
# HTTPError[20]=404
HTTPError[1]=401
HTTPError[2]=404
HTTPError[3]=404
# 301 = moved permanently
HTTPError[4]=301
HTTPError[20]=404
HTTPError[21]=404
HTTPError[22]=404

# Error handling for shop errors
# See the kernel errors for details on usage
[ErrorSettings-shop]
ErrorHandler[]
RedirectURL[]
RerunURL[]
EmbedURL[]
HTTPError[1]=404

# Definition for the HTTP error code 404.
# It's possible to specify more error codes by creating a group called
# HTTPError followed by a - (dash) and the HTTP error code.
# The group most contain the HTTPName variable, if not the error code
# is not issued to the browser.
# Note: The HTTPName must be contain the correct string for the
#       specific HTTP error code.
[HTTPError-404]
HTTPName=Not Found

# Definition of the HTTP error code 301
# URL moved permanently
[HTTPError-301]
HTTPName=Moved Permanently

# Definition of the HTTP error code 401
# Authorization Required
[HTTPError-401]
HTTPName=Authorization Required
