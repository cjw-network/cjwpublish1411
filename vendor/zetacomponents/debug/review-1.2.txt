[X] ezcDebug::getStackTrace() is not documented.
[X] ezcDebugException: component level exceptions should always be abstract,
    and thus there needs to be a new more specific eXceptions. (See
    http://ezcomponents.org/contributing/coding_standards#eXceptions)
[X] The eXample stylesheet misses classes for the stack trace CSS classes.
[X] ezcDebugStacktraceIterator::__construct() should really be the first method
    in the class.
[X] ezcDebugVariableDumpTool has the constants undocumented.
[X] ezcDebugVariableDumpTool::getPropertyVisibility uses expressions in in the
    case statement, that's quite confusing to read. I prefer the use of
    "if/else" here.
[X] ezcDebugVariableDumpTool::getPropertyValue - there is a TODO, can you check
    that for PHP 5.2.1 and up?
[X] The ezcDebug class docs don't mention anything about the options, so how do
    I know where to set them? It's because the properties of the class are not
    documented, but the class doc block itself should mention it additionally
    as well.
[X] The variable output in stack traces should be configurable, like Xdebug.
    There is way too much output by default now making them quite useless.
[X] The tutorial doesn't mention the new functionality yet.
[X] There is a pretty low code coverage - only 77%.
[X] The doc analysis tool shows lots of issues.
[X] I get a failing test::

    1) testIterateTrace(ezcDebugXdebugStacktraceIteratorTest)
    Incorrect stack element 0.
    Failed asserting that two arrays are equal.
    --- Expected
    +++ Actual
    @@ -5,8 +5,6 @@
         [line] => 23
         [params] => Array
             (
    -            [0] => 'some string'
    -            [1] => array (0 => TRUE, 1 => 23, 2 => NULL)
             )
     
     )

    /home/derick/dev/ezcomponents/trunk/Debug/tests/xdebug_stacktrace_iterator_test.php:69

TS:

[X] ezcDebugMessage seems orphan. Only used in 1 single place and this is
    internally. This usage should be replaced by code in ezcDebugMessage and
	this class should be removed (safe, @access private).
