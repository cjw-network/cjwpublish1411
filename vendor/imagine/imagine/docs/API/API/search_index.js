var search_data = {
    'index': {
        'searchIndex': ["imagine","imagine\\draw","imagine\\effects","imagine\\exception","imagine\\filter","imagine\\filter\\advanced","imagine\\filter\\basic","imagine\\gd","imagine\\gmagick","imagine\\image","imagine\\image\\fill","imagine\\image\\fill\\gradient","imagine\\image\\histogram","imagine\\image\\metadata","imagine\\image\\palette","imagine\\image\\palette\\color","imagine\\image\\point","imagine\\imagick","imagine\\test","imagine\\test\\constraint","imagine\\draw\\drawerinterface","imagine\\effects\\effectsinterface","imagine\\exception\\exception","imagine\\exception\\invalidargumentexception","imagine\\exception\\notsupportedexception","imagine\\exception\\outofboundsexception","imagine\\exception\\runtimeexception","imagine\\filter\\advanced\\border","imagine\\filter\\advanced\\canvas","imagine\\filter\\advanced\\grayscale","imagine\\filter\\advanced\\onpixelbased","imagine\\filter\\advanced\\relativeresize","imagine\\filter\\basic\\applymask","imagine\\filter\\basic\\autorotate","imagine\\filter\\basic\\copy","imagine\\filter\\basic\\crop","imagine\\filter\\basic\\fill","imagine\\filter\\basic\\fliphorizontally","imagine\\filter\\basic\\flipvertically","imagine\\filter\\basic\\paste","imagine\\filter\\basic\\resize","imagine\\filter\\basic\\rotate","imagine\\filter\\basic\\save","imagine\\filter\\basic\\show","imagine\\filter\\basic\\strip","imagine\\filter\\basic\\thumbnail","imagine\\filter\\basic\\weboptimization","imagine\\filter\\filterinterface","imagine\\filter\\imagineaware","imagine\\filter\\transformation","imagine\\gd\\drawer","imagine\\gd\\effects","imagine\\gd\\font","imagine\\gd\\image","imagine\\gd\\imagine","imagine\\gd\\layers","imagine\\gmagick\\drawer","imagine\\gmagick\\effects","imagine\\gmagick\\font","imagine\\gmagick\\image","imagine\\gmagick\\imagine","imagine\\gmagick\\layers","imagine\\image\\abstractfont","imagine\\image\\abstractimage","imagine\\image\\abstractimagine","imagine\\image\\abstractlayers","imagine\\image\\box","imagine\\image\\boxinterface","imagine\\image\\fill\\fillinterface","imagine\\image\\fill\\gradient\\horizontal","imagine\\image\\fill\\gradient\\linear","imagine\\image\\fill\\gradient\\vertical","imagine\\image\\fontinterface","imagine\\image\\histogram\\bucket","imagine\\image\\histogram\\range","imagine\\image\\imageinterface","imagine\\image\\imagineinterface","imagine\\image\\layersinterface","imagine\\image\\manipulatorinterface","imagine\\image\\metadata\\abstractmetadatareader","imagine\\image\\metadata\\defaultmetadatareader","imagine\\image\\metadata\\exifmetadatareader","imagine\\image\\metadata\\metadatabag","imagine\\image\\metadata\\metadatareaderinterface","imagine\\image\\palette\\cmyk","imagine\\image\\palette\\colorparser","imagine\\image\\palette\\color\\cmyk","imagine\\image\\palette\\color\\colorinterface","imagine\\image\\palette\\color\\gray","imagine\\image\\palette\\color\\rgb","imagine\\image\\palette\\grayscale","imagine\\image\\palette\\paletteinterface","imagine\\image\\palette\\rgb","imagine\\image\\point","imagine\\image\\pointinterface","imagine\\image\\point\\center","imagine\\image\\profile","imagine\\image\\profileinterface","imagine\\imagick\\drawer","imagine\\imagick\\effects","imagine\\imagick\\font","imagine\\imagick\\image","imagine\\imagick\\imagine","imagine\\imagick\\layers","imagine\\test\\constraint\\isimageequal","imagine\\test\\imaginetestcase","imagine\\draw\\drawerinterface::arc","imagine\\draw\\drawerinterface::chord","imagine\\draw\\drawerinterface::ellipse","imagine\\draw\\drawerinterface::line","imagine\\draw\\drawerinterface::pieslice","imagine\\draw\\drawerinterface::dot","imagine\\draw\\drawerinterface::polygon","imagine\\draw\\drawerinterface::text","imagine\\effects\\effectsinterface::gamma","imagine\\effects\\effectsinterface::negative","imagine\\effects\\effectsinterface::grayscale","imagine\\effects\\effectsinterface::colorize","imagine\\effects\\effectsinterface::sharpen","imagine\\effects\\effectsinterface::blur","imagine\\filter\\advanced\\border::__construct","imagine\\filter\\advanced\\border::apply","imagine\\filter\\advanced\\canvas::__construct","imagine\\filter\\advanced\\canvas::apply","imagine\\filter\\advanced\\grayscale::__construct","imagine\\filter\\advanced\\onpixelbased::__construct","imagine\\filter\\advanced\\onpixelbased::apply","imagine\\filter\\advanced\\relativeresize::__construct","imagine\\filter\\advanced\\relativeresize::apply","imagine\\filter\\basic\\applymask::__construct","imagine\\filter\\basic\\applymask::apply","imagine\\filter\\basic\\autorotate::__construct","imagine\\filter\\basic\\autorotate::apply","imagine\\filter\\basic\\copy::apply","imagine\\filter\\basic\\crop::__construct","imagine\\filter\\basic\\crop::apply","imagine\\filter\\basic\\fill::__construct","imagine\\filter\\basic\\fill::apply","imagine\\filter\\basic\\fliphorizontally::apply","imagine\\filter\\basic\\flipvertically::apply","imagine\\filter\\basic\\paste::__construct","imagine\\filter\\basic\\paste::apply","imagine\\filter\\basic\\resize::__construct","imagine\\filter\\basic\\resize::apply","imagine\\filter\\basic\\rotate::__construct","imagine\\filter\\basic\\rotate::apply","imagine\\filter\\basic\\save::__construct","imagine\\filter\\basic\\save::apply","imagine\\filter\\basic\\show::__construct","imagine\\filter\\basic\\show::apply","imagine\\filter\\basic\\strip::apply","imagine\\filter\\basic\\thumbnail::__construct","imagine\\filter\\basic\\thumbnail::apply","imagine\\filter\\basic\\weboptimization::__construct","imagine\\filter\\basic\\weboptimization::apply","imagine\\filter\\filterinterface::apply","imagine\\filter\\imagineaware::setimagine","imagine\\filter\\imagineaware::getimagine","imagine\\filter\\transformation::__construct","imagine\\filter\\transformation::applyfilter","imagine\\filter\\transformation::getfilters","imagine\\filter\\transformation::apply","imagine\\filter\\transformation::copy","imagine\\filter\\transformation::crop","imagine\\filter\\transformation::fliphorizontally","imagine\\filter\\transformation::flipvertically","imagine\\filter\\transformation::strip","imagine\\filter\\transformation::paste","imagine\\filter\\transformation::applymask","imagine\\filter\\transformation::fill","imagine\\filter\\transformation::resize","imagine\\filter\\transformation::rotate","imagine\\filter\\transformation::save","imagine\\filter\\transformation::show","imagine\\filter\\transformation::thumbnail","imagine\\filter\\transformation::add","imagine\\gd\\drawer::__construct","imagine\\gd\\drawer::arc","imagine\\gd\\drawer::chord","imagine\\gd\\drawer::ellipse","imagine\\gd\\drawer::line","imagine\\gd\\drawer::pieslice","imagine\\gd\\drawer::dot","imagine\\gd\\drawer::polygon","imagine\\gd\\drawer::text","imagine\\gd\\effects::__construct","imagine\\gd\\effects::gamma","imagine\\gd\\effects::negative","imagine\\gd\\effects::grayscale","imagine\\gd\\effects::colorize","imagine\\gd\\effects::sharpen","imagine\\gd\\effects::blur","imagine\\gd\\font::box","imagine\\gd\\image::__construct","imagine\\gd\\image::__destruct","imagine\\gd\\image::getgdresource","imagine\\gd\\image::copy","imagine\\gd\\image::crop","imagine\\gd\\image::paste","imagine\\gd\\image::resize","imagine\\gd\\image::rotate","imagine\\gd\\image::save","imagine\\gd\\image::show","imagine\\gd\\image::get","imagine\\gd\\image::__tostring","imagine\\gd\\image::fliphorizontally","imagine\\gd\\image::flipvertically","imagine\\gd\\image::strip","imagine\\gd\\image::draw","imagine\\gd\\image::effects","imagine\\gd\\image::getsize","imagine\\gd\\image::applymask","imagine\\gd\\image::fill","imagine\\gd\\image::mask","imagine\\gd\\image::histogram","imagine\\gd\\image::getcolorat","imagine\\gd\\image::layers","imagine\\gd\\image::interlace","imagine\\gd\\image::palette","imagine\\gd\\image::profile","imagine\\gd\\image::usepalette","imagine\\gd\\imagine::__construct","imagine\\gd\\imagine::create","imagine\\gd\\imagine::open","imagine\\gd\\imagine::load","imagine\\gd\\imagine::read","imagine\\gd\\imagine::font","imagine\\gd\\layers::__construct","imagine\\gd\\layers::merge","imagine\\gd\\layers::coalesce","imagine\\gd\\layers::animate","imagine\\gd\\layers::current","imagine\\gd\\layers::key","imagine\\gd\\layers::next","imagine\\gd\\layers::rewind","imagine\\gd\\layers::valid","imagine\\gd\\layers::count","imagine\\gd\\layers::offsetexists","imagine\\gd\\layers::offsetget","imagine\\gd\\layers::offsetset","imagine\\gd\\layers::offsetunset","imagine\\gmagick\\drawer::__construct","imagine\\gmagick\\drawer::arc","imagine\\gmagick\\drawer::chord","imagine\\gmagick\\drawer::ellipse","imagine\\gmagick\\drawer::line","imagine\\gmagick\\drawer::pieslice","imagine\\gmagick\\drawer::dot","imagine\\gmagick\\drawer::polygon","imagine\\gmagick\\drawer::text","imagine\\gmagick\\effects::__construct","imagine\\gmagick\\effects::gamma","imagine\\gmagick\\effects::negative","imagine\\gmagick\\effects::grayscale","imagine\\gmagick\\effects::colorize","imagine\\gmagick\\effects::sharpen","imagine\\gmagick\\effects::blur","imagine\\gmagick\\font::__construct","imagine\\gmagick\\font::box","imagine\\gmagick\\image::__construct","imagine\\gmagick\\image::__destruct","imagine\\gmagick\\image::getgmagick","imagine\\gmagick\\image::copy","imagine\\gmagick\\image::crop","imagine\\gmagick\\image::fliphorizontally","imagine\\gmagick\\image::flipvertically","imagine\\gmagick\\image::strip","imagine\\gmagick\\image::paste","imagine\\gmagick\\image::resize","imagine\\gmagick\\image::rotate","imagine\\gmagick\\image::save","imagine\\gmagick\\image::show","imagine\\gmagick\\image::get","imagine\\gmagick\\image::__tostring","imagine\\gmagick\\image::draw","imagine\\gmagick\\image::effects","imagine\\gmagick\\image::getsize","imagine\\gmagick\\image::applymask","imagine\\gmagick\\image::mask","imagine\\gmagick\\image::fill","imagine\\gmagick\\image::histogram","imagine\\gmagick\\image::getcolorat","imagine\\gmagick\\image::pixeltocolor","imagine\\gmagick\\image::layers","imagine\\gmagick\\image::interlace","imagine\\gmagick\\image::usepalette","imagine\\gmagick\\image::palette","imagine\\gmagick\\image::profile","imagine\\gmagick\\imagine::__construct","imagine\\gmagick\\imagine::open","imagine\\gmagick\\imagine::create","imagine\\gmagick\\imagine::load","imagine\\gmagick\\imagine::read","imagine\\gmagick\\imagine::font","imagine\\gmagick\\layers::__construct","imagine\\gmagick\\layers::merge","imagine\\gmagick\\layers::coalesce","imagine\\gmagick\\layers::animate","imagine\\gmagick\\layers::current","imagine\\gmagick\\layers::key","imagine\\gmagick\\layers::next","imagine\\gmagick\\layers::rewind","imagine\\gmagick\\layers::valid","imagine\\gmagick\\layers::count","imagine\\gmagick\\layers::offsetexists","imagine\\gmagick\\layers::offsetget","imagine\\gmagick\\layers::offsetset","imagine\\gmagick\\layers::offsetunset","imagine\\image\\abstractfont::__construct","imagine\\image\\abstractfont::getfile","imagine\\image\\abstractfont::getsize","imagine\\image\\abstractfont::getcolor","imagine\\image\\abstractimage::thumbnail","imagine\\image\\abstractimage::metadata","imagine\\image\\abstractimage::__clone","imagine\\image\\abstractimagine::setmetadatareader","imagine\\image\\abstractimagine::getmetadatareader","imagine\\image\\abstractlayers::add","imagine\\image\\abstractlayers::set","imagine\\image\\abstractlayers::remove","imagine\\image\\abstractlayers::get","imagine\\image\\abstractlayers::has","imagine\\image\\box::__construct","imagine\\image\\box::getwidth","imagine\\image\\box::getheight","imagine\\image\\box::scale","imagine\\image\\box::increase","imagine\\image\\box::contains","imagine\\image\\box::square","imagine\\image\\box::__tostring","imagine\\image\\box::widen","imagine\\image\\box::heighten","imagine\\image\\boxinterface::getheight","imagine\\image\\boxinterface::getwidth","imagine\\image\\boxinterface::scale","imagine\\image\\boxinterface::increase","imagine\\image\\boxinterface::contains","imagine\\image\\boxinterface::square","imagine\\image\\boxinterface::__tostring","imagine\\image\\boxinterface::widen","imagine\\image\\boxinterface::heighten","imagine\\image\\fill\\fillinterface::getcolor","imagine\\image\\fill\\gradient\\horizontal::getdistance","imagine\\image\\fill\\gradient\\linear::__construct","imagine\\image\\fill\\gradient\\linear::getcolor","imagine\\image\\fill\\gradient\\linear::getstart","imagine\\image\\fill\\gradient\\linear::getend","imagine\\image\\fill\\gradient\\vertical::getdistance","imagine\\image\\fontinterface::getfile","imagine\\image\\fontinterface::getsize","imagine\\image\\fontinterface::getcolor","imagine\\image\\fontinterface::box","imagine\\image\\histogram\\bucket::__construct","imagine\\image\\histogram\\bucket::add","imagine\\image\\histogram\\bucket::count","imagine\\image\\histogram\\range::__construct","imagine\\image\\histogram\\range::contains","imagine\\image\\imageinterface::get","imagine\\image\\imageinterface::__tostring","imagine\\image\\imageinterface::draw","imagine\\image\\imageinterface::effects","imagine\\image\\imageinterface::getsize","imagine\\image\\imageinterface::mask","imagine\\image\\imageinterface::histogram","imagine\\image\\imageinterface::getcolorat","imagine\\image\\imageinterface::layers","imagine\\image\\imageinterface::interlace","imagine\\image\\imageinterface::palette","imagine\\image\\imageinterface::usepalette","imagine\\image\\imageinterface::profile","imagine\\image\\imageinterface::metadata","imagine\\image\\imagineinterface::create","imagine\\image\\imagineinterface::open","imagine\\image\\imagineinterface::load","imagine\\image\\imagineinterface::read","imagine\\image\\imagineinterface::font","imagine\\image\\layersinterface::merge","imagine\\image\\layersinterface::animate","imagine\\image\\layersinterface::coalesce","imagine\\image\\layersinterface::add","imagine\\image\\layersinterface::set","imagine\\image\\layersinterface::remove","imagine\\image\\layersinterface::get","imagine\\image\\layersinterface::has","imagine\\image\\manipulatorinterface::copy","imagine\\image\\manipulatorinterface::crop","imagine\\image\\manipulatorinterface::resize","imagine\\image\\manipulatorinterface::rotate","imagine\\image\\manipulatorinterface::paste","imagine\\image\\manipulatorinterface::save","imagine\\image\\manipulatorinterface::show","imagine\\image\\manipulatorinterface::fliphorizontally","imagine\\image\\manipulatorinterface::flipvertically","imagine\\image\\manipulatorinterface::strip","imagine\\image\\manipulatorinterface::thumbnail","imagine\\image\\manipulatorinterface::applymask","imagine\\image\\manipulatorinterface::fill","imagine\\image\\metadata\\abstractmetadatareader::readfile","imagine\\image\\metadata\\abstractmetadatareader::readdata","imagine\\image\\metadata\\abstractmetadatareader::readstream","imagine\\image\\metadata\\exifmetadatareader::__construct","imagine\\image\\metadata\\metadatabag::__construct","imagine\\image\\metadata\\metadatabag::getiterator","imagine\\image\\metadata\\metadatabag::offsetexists","imagine\\image\\metadata\\metadatabag::offsetset","imagine\\image\\metadata\\metadatabag::offsetunset","imagine\\image\\metadata\\metadatabag::offsetget","imagine\\image\\metadata\\metadatabag::toarray","imagine\\image\\metadata\\metadatareaderinterface::readfile","imagine\\image\\metadata\\metadatareaderinterface::readdata","imagine\\image\\metadata\\metadatareaderinterface::readstream","imagine\\image\\palette\\cmyk::__construct","imagine\\image\\palette\\cmyk::name","imagine\\image\\palette\\cmyk::pixeldefinition","imagine\\image\\palette\\cmyk::supportsalpha","imagine\\image\\palette\\cmyk::color","imagine\\image\\palette\\cmyk::blend","imagine\\image\\palette\\cmyk::useprofile","imagine\\image\\palette\\cmyk::profile","imagine\\image\\palette\\colorparser::parsetorgb","imagine\\image\\palette\\colorparser::parsetocmyk","imagine\\image\\palette\\colorparser::parsetograyscale","imagine\\image\\palette\\color\\cmyk::__construct","imagine\\image\\palette\\color\\cmyk::getvalue","imagine\\image\\palette\\color\\cmyk::getcyan","imagine\\image\\palette\\color\\cmyk::getmagenta","imagine\\image\\palette\\color\\cmyk::getyellow","imagine\\image\\palette\\color\\cmyk::getkeyline","imagine\\image\\palette\\color\\cmyk::getpalette","imagine\\image\\palette\\color\\cmyk::getalpha","imagine\\image\\palette\\color\\cmyk::dissolve","imagine\\image\\palette\\color\\cmyk::lighten","imagine\\image\\palette\\color\\cmyk::darken","imagine\\image\\palette\\color\\cmyk::grayscale","imagine\\image\\palette\\color\\cmyk::isopaque","imagine\\image\\palette\\color\\cmyk::__tostring","imagine\\image\\palette\\color\\colorinterface::getvalue","imagine\\image\\palette\\color\\colorinterface::getalpha","imagine\\image\\palette\\color\\colorinterface::getpalette","imagine\\image\\palette\\color\\colorinterface::dissolve","imagine\\image\\palette\\color\\colorinterface::lighten","imagine\\image\\palette\\color\\colorinterface::darken","imagine\\image\\palette\\color\\colorinterface::grayscale","imagine\\image\\palette\\color\\colorinterface::isopaque","imagine\\image\\palette\\color\\gray::__construct","imagine\\image\\palette\\color\\gray::getvalue","imagine\\image\\palette\\color\\gray::getgray","imagine\\image\\palette\\color\\gray::getpalette","imagine\\image\\palette\\color\\gray::getalpha","imagine\\image\\palette\\color\\gray::dissolve","imagine\\image\\palette\\color\\gray::lighten","imagine\\image\\palette\\color\\gray::darken","imagine\\image\\palette\\color\\gray::grayscale","imagine\\image\\palette\\color\\gray::isopaque","imagine\\image\\palette\\color\\gray::__tostring","imagine\\image\\palette\\color\\rgb::__construct","imagine\\image\\palette\\color\\rgb::getvalue","imagine\\image\\palette\\color\\rgb::getred","imagine\\image\\palette\\color\\rgb::getgreen","imagine\\image\\palette\\color\\rgb::getblue","imagine\\image\\palette\\color\\rgb::getpalette","imagine\\image\\palette\\color\\rgb::getalpha","imagine\\image\\palette\\color\\rgb::dissolve","imagine\\image\\palette\\color\\rgb::lighten","imagine\\image\\palette\\color\\rgb::darken","imagine\\image\\palette\\color\\rgb::grayscale","imagine\\image\\palette\\color\\rgb::isopaque","imagine\\image\\palette\\color\\rgb::__tostring","imagine\\image\\palette\\grayscale::__construct","imagine\\image\\palette\\grayscale::name","imagine\\image\\palette\\grayscale::pixeldefinition","imagine\\image\\palette\\grayscale::supportsalpha","imagine\\image\\palette\\grayscale::useprofile","imagine\\image\\palette\\grayscale::profile","imagine\\image\\palette\\grayscale::color","imagine\\image\\palette\\grayscale::blend","imagine\\image\\palette\\paletteinterface::color","imagine\\image\\palette\\paletteinterface::blend","imagine\\image\\palette\\paletteinterface::useprofile","imagine\\image\\palette\\paletteinterface::profile","imagine\\image\\palette\\paletteinterface::name","imagine\\image\\palette\\paletteinterface::pixeldefinition","imagine\\image\\palette\\paletteinterface::supportsalpha","imagine\\image\\palette\\rgb::__construct","imagine\\image\\palette\\rgb::name","imagine\\image\\palette\\rgb::pixeldefinition","imagine\\image\\palette\\rgb::supportsalpha","imagine\\image\\palette\\rgb::useprofile","imagine\\image\\palette\\rgb::profile","imagine\\image\\palette\\rgb::color","imagine\\image\\palette\\rgb::blend","imagine\\image\\point::__construct","imagine\\image\\point::getx","imagine\\image\\point::gety","imagine\\image\\point::in","imagine\\image\\point::move","imagine\\image\\point::__tostring","imagine\\image\\pointinterface::getx","imagine\\image\\pointinterface::gety","imagine\\image\\pointinterface::in","imagine\\image\\pointinterface::move","imagine\\image\\pointinterface::__tostring","imagine\\image\\point\\center::__construct","imagine\\image\\point\\center::getx","imagine\\image\\point\\center::gety","imagine\\image\\point\\center::in","imagine\\image\\point\\center::move","imagine\\image\\point\\center::__tostring","imagine\\image\\profile::__construct","imagine\\image\\profile::name","imagine\\image\\profile::data","imagine\\image\\profile::frompath","imagine\\image\\profileinterface::name","imagine\\image\\profileinterface::data","imagine\\imagick\\drawer::__construct","imagine\\imagick\\drawer::arc","imagine\\imagick\\drawer::chord","imagine\\imagick\\drawer::ellipse","imagine\\imagick\\drawer::line","imagine\\imagick\\drawer::pieslice","imagine\\imagick\\drawer::dot","imagine\\imagick\\drawer::polygon","imagine\\imagick\\drawer::text","imagine\\imagick\\effects::__construct","imagine\\imagick\\effects::gamma","imagine\\imagick\\effects::negative","imagine\\imagick\\effects::grayscale","imagine\\imagick\\effects::colorize","imagine\\imagick\\effects::sharpen","imagine\\imagick\\effects::blur","imagine\\imagick\\font::__construct","imagine\\imagick\\font::box","imagine\\imagick\\image::__construct","imagine\\imagick\\image::__destruct","imagine\\imagick\\image::getimagick","imagine\\imagick\\image::copy","imagine\\imagick\\image::crop","imagine\\imagick\\image::fliphorizontally","imagine\\imagick\\image::flipvertically","imagine\\imagick\\image::strip","imagine\\imagick\\image::paste","imagine\\imagick\\image::resize","imagine\\imagick\\image::rotate","imagine\\imagick\\image::save","imagine\\imagick\\image::show","imagine\\imagick\\image::get","imagine\\imagick\\image::interlace","imagine\\imagick\\image::__tostring","imagine\\imagick\\image::draw","imagine\\imagick\\image::effects","imagine\\imagick\\image::getsize","imagine\\imagick\\image::applymask","imagine\\imagick\\image::mask","imagine\\imagick\\image::fill","imagine\\imagick\\image::histogram","imagine\\imagick\\image::getcolorat","imagine\\imagick\\image::pixeltocolor","imagine\\imagick\\image::layers","imagine\\imagick\\image::usepalette","imagine\\imagick\\image::palette","imagine\\imagick\\image::profile","imagine\\imagick\\imagine::__construct","imagine\\imagick\\imagine::open","imagine\\imagick\\imagine::create","imagine\\imagick\\imagine::load","imagine\\imagick\\imagine::read","imagine\\imagick\\imagine::font","imagine\\imagick\\layers::__construct","imagine\\imagick\\layers::merge","imagine\\imagick\\layers::animate","imagine\\imagick\\layers::coalesce","imagine\\imagick\\layers::current","imagine\\imagick\\layers::key","imagine\\imagick\\layers::next","imagine\\imagick\\layers::rewind","imagine\\imagick\\layers::valid","imagine\\imagick\\layers::count","imagine\\imagick\\layers::offsetexists","imagine\\imagick\\layers::offsetget","imagine\\imagick\\layers::offsetset","imagine\\imagick\\layers::offsetunset","imagine\\test\\constraint\\isimageequal::__construct","imagine\\test\\constraint\\isimageequal::evaluate","imagine\\test\\constraint\\isimageequal::tostring","imagine\\test\\imaginetestcase::assertimageequals"],
        'info': [["Imagine","","Imagine.html","","",3],["Imagine\\Draw","","Imagine\/Draw.html","","",3],["Imagine\\Effects","","Imagine\/Effects.html","","",3],["Imagine\\Exception","","Imagine\/Exception.html","","",3],["Imagine\\Filter","","Imagine\/Filter.html","","",3],["Imagine\\Filter\\Advanced","","Imagine\/Filter\/Advanced.html","","",3],["Imagine\\Filter\\Basic","","Imagine\/Filter\/Basic.html","","",3],["Imagine\\Gd","","Imagine\/Gd.html","","",3],["Imagine\\Gmagick","","Imagine\/Gmagick.html","","",3],["Imagine\\Image","","Imagine\/Image.html","","",3],["Imagine\\Image\\Fill","","Imagine\/Image\/Fill.html","","",3],["Imagine\\Image\\Fill\\Gradient","","Imagine\/Image\/Fill\/Gradient.html","","",3],["Imagine\\Image\\Histogram","","Imagine\/Image\/Histogram.html","","",3],["Imagine\\Image\\Metadata","","Imagine\/Image\/Metadata.html","","",3],["Imagine\\Image\\Palette","","Imagine\/Image\/Palette.html","","",3],["Imagine\\Image\\Palette\\Color","","Imagine\/Image\/Palette\/Color.html","","",3],["Imagine\\Image\\Point","","Imagine\/Image\/Point.html","","",3],["Imagine\\Imagick","","Imagine\/Imagick.html","","",3],["Imagine\\Test","","Imagine\/Test.html","","",3],["Imagine\\Test\\Constraint","","Imagine\/Test\/Constraint.html","","",3],["DrawerInterface","Imagine\\Draw","Imagine\/Draw\/DrawerInterface.html","","Interface for the drawer",1],["EffectsInterface","Imagine\\Effects","Imagine\/Effects\/EffectsInterface.html","","Interface for the effects",1],["Exception","Imagine\\Exception","Imagine\/Exception\/Exception.html","","Imagine-specific exception",1],["InvalidArgumentException","Imagine\\Exception","Imagine\/Exception\/InvalidArgumentException.html"," < InvalidArgumentException","Imagine-specific invalid argument exception",1],["NotSupportedException","Imagine\\Exception","Imagine\/Exception\/NotSupportedException.html"," < RuntimeException","Should be used when a driver does not support an operation.",1],["OutOfBoundsException","Imagine\\Exception","Imagine\/Exception\/OutOfBoundsException.html"," < OutOfBoundsException","Imagine-specific out of bounds exception",1],["RuntimeException","Imagine\\Exception","Imagine\/Exception\/RuntimeException.html"," < RuntimeException","Imagine-specific runtime exception",1],["Border","Imagine\\Filter\\Advanced","Imagine\/Filter\/Advanced\/Border.html","","A border filter",1],["Canvas","Imagine\\Filter\\Advanced","Imagine\/Filter\/Advanced\/Canvas.html","","A canvas filter",1],["Grayscale","Imagine\\Filter\\Advanced","Imagine\/Filter\/Advanced\/Grayscale.html"," < OnPixelBased","The Grayscale filter calculates the gray-value based",1],["OnPixelBased","Imagine\\Filter\\Advanced","Imagine\/Filter\/Advanced\/OnPixelBased.html","","The OnPixelBased takes a callable, and for each pixel,",1],["RelativeResize","Imagine\\Filter\\Advanced","Imagine\/Filter\/Advanced\/RelativeResize.html","","The RelativeResize filter allows images to be resized",1],["ApplyMask","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/ApplyMask.html","","An apply mask filter",1],["Autorotate","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Autorotate.html","","Rotates an image automatically based on exif information.",1],["Copy","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Copy.html","","A copy filter",1],["Crop","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Crop.html","","A crop filter",1],["Fill","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Fill.html","","A fill filter",1],["FlipHorizontally","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/FlipHorizontally.html","","A \"flip horizontally\" filter",1],["FlipVertically","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/FlipVertically.html","","A \"flip vertically\" filter",1],["Paste","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Paste.html","","A paste filter",1],["Resize","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Resize.html","","A resize filter",1],["Rotate","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Rotate.html","","A rotate filter",1],["Save","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Save.html","","A save filter",1],["Show","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Show.html","","A show filter",1],["Strip","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Strip.html","","A strip filter",1],["Thumbnail","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/Thumbnail.html","","A thumbnail filter",1],["WebOptimization","Imagine\\Filter\\Basic","Imagine\/Filter\/Basic\/WebOptimization.html","","A filter to render web-optimized images",1],["FilterInterface","Imagine\\Filter","Imagine\/Filter\/FilterInterface.html","","Interface for imagine filters",1],["ImagineAware","Imagine\\Filter","Imagine\/Filter\/ImagineAware.html","","ImagineAware base class",1],["Transformation","Imagine\\Filter","Imagine\/Filter\/Transformation.html","","A transformation filter",1],["Drawer","Imagine\\Gd","Imagine\/Gd\/Drawer.html","","Drawer implementation using the GD library",1],["Effects","Imagine\\Gd","Imagine\/Gd\/Effects.html","","Effects implementation using the GD library",1],["Font","Imagine\\Gd","Imagine\/Gd\/Font.html"," < AbstractFont","Font implementation using the GD library",1],["Image","Imagine\\Gd","Imagine\/Gd\/Image.html"," < AbstractImage","Image implementation using the GD library",1],["Imagine","Imagine\\Gd","Imagine\/Gd\/Imagine.html"," < AbstractImagine","Imagine implementation using the GD library",1],["Layers","Imagine\\Gd","Imagine\/Gd\/Layers.html"," < AbstractLayers","",1],["Drawer","Imagine\\Gmagick","Imagine\/Gmagick\/Drawer.html","","Drawer implementation using the Gmagick PHP extension",1],["Effects","Imagine\\Gmagick","Imagine\/Gmagick\/Effects.html","","Effects implementation using the Gmagick PHP extension",1],["Font","Imagine\\Gmagick","Imagine\/Gmagick\/Font.html"," < AbstractFont","Font implementation using the Gmagick PHP extension",1],["Image","Imagine\\Gmagick","Imagine\/Gmagick\/Image.html"," < AbstractImage","Image implementation using the Gmagick PHP extension",1],["Imagine","Imagine\\Gmagick","Imagine\/Gmagick\/Imagine.html"," < AbstractImagine","Imagine implementation using the Gmagick PHP extension",1],["Layers","Imagine\\Gmagick","Imagine\/Gmagick\/Layers.html"," < AbstractLayers","",1],["AbstractFont","Imagine\\Image","Imagine\/Image\/AbstractFont.html","","Abstract font base class",1],["AbstractImage","Imagine\\Image","Imagine\/Image\/AbstractImage.html","","",1],["AbstractImagine","Imagine\\Image","Imagine\/Image\/AbstractImagine.html","","",1],["AbstractLayers","Imagine\\Image","Imagine\/Image\/AbstractLayers.html","","",1],["Box","Imagine\\Image","Imagine\/Image\/Box.html","","A box implementation",1],["BoxInterface","Imagine\\Image","Imagine\/Image\/BoxInterface.html","","Interface for a box",1],["FillInterface","Imagine\\Image\\Fill","Imagine\/Image\/Fill\/FillInterface.html","","Interface for the fill",1],["Horizontal","Imagine\\Image\\Fill\\Gradient","Imagine\/Image\/Fill\/Gradient\/Horizontal.html"," < Linear","Horizontal gradient fill",1],["Linear","Imagine\\Image\\Fill\\Gradient","Imagine\/Image\/Fill\/Gradient\/Linear.html","","Linear gradient fill",1],["Vertical","Imagine\\Image\\Fill\\Gradient","Imagine\/Image\/Fill\/Gradient\/Vertical.html"," < Linear","Vertical gradient fill",1],["FontInterface","Imagine\\Image","Imagine\/Image\/FontInterface.html","","The font interface",1],["Bucket","Imagine\\Image\\Histogram","Imagine\/Image\/Histogram\/Bucket.html","","Bucket histogram",1],["Range","Imagine\\Image\\Histogram","Imagine\/Image\/Histogram\/Range.html","","Range histogram",1],["ImageInterface","Imagine\\Image","Imagine\/Image\/ImageInterface.html","","The image interface",1],["ImagineInterface","Imagine\\Image","Imagine\/Image\/ImagineInterface.html","","The imagine interface",1],["LayersInterface","Imagine\\Image","Imagine\/Image\/LayersInterface.html","","The layers interface",1],["ManipulatorInterface","Imagine\\Image","Imagine\/Image\/ManipulatorInterface.html","","The manipulator interface",1],["AbstractMetadataReader","Imagine\\Image\\Metadata","Imagine\/Image\/Metadata\/AbstractMetadataReader.html","","",1],["DefaultMetadataReader","Imagine\\Image\\Metadata","Imagine\/Image\/Metadata\/DefaultMetadataReader.html"," < AbstractMetadataReader","Default metadata reader",1],["ExifMetadataReader","Imagine\\Image\\Metadata","Imagine\/Image\/Metadata\/ExifMetadataReader.html"," < AbstractMetadataReader","Metadata driven by Exif information",1],["MetadataBag","Imagine\\Image\\Metadata","Imagine\/Image\/Metadata\/MetadataBag.html","","An interface for Image Metadata",1],["MetadataReaderInterface","Imagine\\Image\\Metadata","Imagine\/Image\/Metadata\/MetadataReaderInterface.html","","",1],["CMYK","Imagine\\Image\\Palette","Imagine\/Image\/Palette\/CMYK.html","","",1],["ColorParser","Imagine\\Image\\Palette","Imagine\/Image\/Palette\/ColorParser.html","","",1],["CMYK","Imagine\\Image\\Palette\\Color","Imagine\/Image\/Palette\/Color\/CMYK.html","","",1],["ColorInterface","Imagine\\Image\\Palette\\Color","Imagine\/Image\/Palette\/Color\/ColorInterface.html","","",1],["Gray","Imagine\\Image\\Palette\\Color","Imagine\/Image\/Palette\/Color\/Gray.html","","",1],["RGB","Imagine\\Image\\Palette\\Color","Imagine\/Image\/Palette\/Color\/RGB.html","","",1],["Grayscale","Imagine\\Image\\Palette","Imagine\/Image\/Palette\/Grayscale.html","","",1],["PaletteInterface","Imagine\\Image\\Palette","Imagine\/Image\/Palette\/PaletteInterface.html","","",1],["RGB","Imagine\\Image\\Palette","Imagine\/Image\/Palette\/RGB.html","","",1],["Point","Imagine\\Image","Imagine\/Image\/Point.html","","The point class",1],["PointInterface","Imagine\\Image","Imagine\/Image\/PointInterface.html","","The point interface",1],["Center","Imagine\\Image\\Point","Imagine\/Image\/Point\/Center.html","","Point center",1],["Profile","Imagine\\Image","Imagine\/Image\/Profile.html","","",1],["ProfileInterface","Imagine\\Image","Imagine\/Image\/ProfileInterface.html","","",1],["Drawer","Imagine\\Imagick","Imagine\/Imagick\/Drawer.html","","Drawer implementation using the Imagick PHP extension",1],["Effects","Imagine\\Imagick","Imagine\/Imagick\/Effects.html","","Effects implementation using the Imagick PHP extension",1],["Font","Imagine\\Imagick","Imagine\/Imagick\/Font.html"," < AbstractFont","Font implementation using the Imagick PHP extension",1],["Image","Imagine\\Imagick","Imagine\/Imagick\/Image.html"," < AbstractImage","Image implementation using the Imagick PHP extension",1],["Imagine","Imagine\\Imagick","Imagine\/Imagick\/Imagine.html"," < AbstractImagine","Imagine implementation using the Imagick PHP extension",1],["Layers","Imagine\\Imagick","Imagine\/Imagick\/Layers.html"," < AbstractLayers","",1],["IsImageEqual","Imagine\\Test\\Constraint","Imagine\/Test\/Constraint\/IsImageEqual.html"," < PHPUnit_Framework_Constraint","",1],["ImagineTestCase","Imagine\\Test","Imagine\/Test\/ImagineTestCase.html"," < PHPUnit_Framework_TestCase","",1],["DrawerInterface::arc","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_arc","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, integer $thickness = 1)","Draws an arc on a starting at a given x, y coordinates",2],["DrawerInterface::chord","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_chord","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but also connects end points with a straight",2],["DrawerInterface::ellipse","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_ellipse","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws and ellipse with center at the given x, y coordinates,",2],["DrawerInterface::line","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_line","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $outline, integer $thickness = 1)","Draws a line from start(x, y) to end(x, y) coordinates",2],["DrawerInterface::pieSlice","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_pieSlice","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but connects end points and the center",2],["DrawerInterface::dot","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_dot","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","Places a one pixel point at specific coordinates and",2],["DrawerInterface::polygon","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_polygon","(array $coordinates, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws a polygon using array of x, y coordinates.",2],["DrawerInterface::text","Imagine\\Draw\\DrawerInterface","Imagine\/Draw\/DrawerInterface.html#method_text","(string $string, <a href=\"Imagine\/Image\/AbstractFont.html\"><abbr title=\"Imagine\\Image\\AbstractFont\">AbstractFont<\/abbr><\/a> $font, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, integer $angle, integer $width = null)","Annotates image with specified text at a given position",2],["EffectsInterface::gamma","Imagine\\Effects\\EffectsInterface","Imagine\/Effects\/EffectsInterface.html#method_gamma","(float $correction)","Apply gamma correction",2],["EffectsInterface::negative","Imagine\\Effects\\EffectsInterface","Imagine\/Effects\/EffectsInterface.html#method_negative","()","Invert the colors of the image",2],["EffectsInterface::grayscale","Imagine\\Effects\\EffectsInterface","Imagine\/Effects\/EffectsInterface.html#method_grayscale","()","Grayscale the image",2],["EffectsInterface::colorize","Imagine\\Effects\\EffectsInterface","Imagine\/Effects\/EffectsInterface.html#method_colorize","(<a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","Colorize the image",2],["EffectsInterface::sharpen","Imagine\\Effects\\EffectsInterface","Imagine\/Effects\/EffectsInterface.html#method_sharpen","()","Sharpens the image",2],["EffectsInterface::blur","Imagine\\Effects\\EffectsInterface","Imagine\/Effects\/EffectsInterface.html#method_blur","(float|int $sigma)","Blur the image",2],["Border::__construct","Imagine\\Filter\\Advanced\\Border","Imagine\/Filter\/Advanced\/Border.html#method___construct","(<a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, integer $width = 1, integer $height = 1)","Constructs Border filter with given color, width and",2],["Border::apply","Imagine\\Filter\\Advanced\\Border","Imagine\/Filter\/Advanced\/Border.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Canvas::__construct","Imagine\\Filter\\Advanced\\Canvas","Imagine\/Filter\/Advanced\/Canvas.html#method___construct","(<a href=\"Imagine\/Image\/ImagineInterface.html\"><abbr title=\"Imagine\\Image\\ImagineInterface\">ImagineInterface<\/abbr><\/a> $imagine, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $placement = null, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $background = null)","Constructs Canvas filter with given width and height",2],["Canvas::apply","Imagine\\Filter\\Advanced\\Canvas","Imagine\/Filter\/Advanced\/Canvas.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Grayscale::__construct","Imagine\\Filter\\Advanced\\Grayscale","Imagine\/Filter\/Advanced\/Grayscale.html#method___construct","()","",2],["OnPixelBased::__construct","Imagine\\Filter\\Advanced\\OnPixelBased","Imagine\/Filter\/Advanced\/OnPixelBased.html#method___construct","($callback)","",2],["OnPixelBased::apply","Imagine\\Filter\\Advanced\\OnPixelBased","Imagine\/Filter\/Advanced\/OnPixelBased.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["RelativeResize::__construct","Imagine\\Filter\\Advanced\\RelativeResize","Imagine\/Filter\/Advanced\/RelativeResize.html#method___construct","(string $method, mixed $parameter)","Constructs a RelativeResize filter with the given method",2],["RelativeResize::apply","Imagine\\Filter\\Advanced\\RelativeResize","Imagine\/Filter\/Advanced\/RelativeResize.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["ApplyMask::__construct","Imagine\\Filter\\Basic\\ApplyMask","Imagine\/Filter\/Basic\/ApplyMask.html#method___construct","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $mask)","",2],["ApplyMask::apply","Imagine\\Filter\\Basic\\ApplyMask","Imagine\/Filter\/Basic\/ApplyMask.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Autorotate::__construct","Imagine\\Filter\\Basic\\Autorotate","Imagine\/Filter\/Basic\/Autorotate.html#method___construct","(string|array|<a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color = &#039;000000&#039;)","",2],["Autorotate::apply","Imagine\\Filter\\Basic\\Autorotate","Imagine\/Filter\/Basic\/Autorotate.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Copy::apply","Imagine\\Filter\\Basic\\Copy","Imagine\/Filter\/Basic\/Copy.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Crop::__construct","Imagine\\Filter\\Basic\\Crop","Imagine\/Filter\/Basic\/Crop.html#method___construct","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Constructs a Crop filter with given x, y, coordinates",2],["Crop::apply","Imagine\\Filter\\Basic\\Crop","Imagine\/Filter\/Basic\/Crop.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Fill::__construct","Imagine\\Filter\\Basic\\Fill","Imagine\/Filter\/Basic\/Fill.html#method___construct","(<a href=\"Imagine\/Image\/Fill\/FillInterface.html\"><abbr title=\"Imagine\\Image\\Fill\\FillInterface\">FillInterface<\/abbr><\/a> $fill)","",2],["Fill::apply","Imagine\\Filter\\Basic\\Fill","Imagine\/Filter\/Basic\/Fill.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["FlipHorizontally::apply","Imagine\\Filter\\Basic\\FlipHorizontally","Imagine\/Filter\/Basic\/FlipHorizontally.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["FlipVertically::apply","Imagine\\Filter\\Basic\\FlipVertically","Imagine\/Filter\/Basic\/FlipVertically.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Paste::__construct","Imagine\\Filter\\Basic\\Paste","Imagine\/Filter\/Basic\/Paste.html#method___construct","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start)","Constructs a Paste filter with given ImageInterface",2],["Paste::apply","Imagine\\Filter\\Basic\\Paste","Imagine\/Filter\/Basic\/Paste.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Resize::__construct","Imagine\\Filter\\Basic\\Resize","Imagine\/Filter\/Basic\/Resize.html#method___construct","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $filter = ImageInterface::FILTER_UNDEFINED)","Constructs Resize filter with given width and height",2],["Resize::apply","Imagine\\Filter\\Basic\\Resize","Imagine\/Filter\/Basic\/Resize.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Rotate::__construct","Imagine\\Filter\\Basic\\Rotate","Imagine\/Filter\/Basic\/Rotate.html#method___construct","(integer $angle, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $background = null)","Constructs Rotate filter with given angle and background",2],["Rotate::apply","Imagine\\Filter\\Basic\\Rotate","Imagine\/Filter\/Basic\/Rotate.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Save::__construct","Imagine\\Filter\\Basic\\Save","Imagine\/Filter\/Basic\/Save.html#method___construct","(string $path = null, array $options = array())","Constructs Save filter with given path and options",2],["Save::apply","Imagine\\Filter\\Basic\\Save","Imagine\/Filter\/Basic\/Save.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Show::__construct","Imagine\\Filter\\Basic\\Show","Imagine\/Filter\/Basic\/Show.html#method___construct","(string $format, array $options = array())","Constructs the Show filter with given format and options",2],["Show::apply","Imagine\\Filter\\Basic\\Show","Imagine\/Filter\/Basic\/Show.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Strip::apply","Imagine\\Filter\\Basic\\Strip","Imagine\/Filter\/Basic\/Strip.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Thumbnail::__construct","Imagine\\Filter\\Basic\\Thumbnail","Imagine\/Filter\/Basic\/Thumbnail.html#method___construct","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $mode = ImageInterface::THUMBNAIL_INSET, string $filter = ImageInterface::FILTER_UNDEFINED)","Constructs the Thumbnail filter with given width, height",2],["Thumbnail::apply","Imagine\\Filter\\Basic\\Thumbnail","Imagine\/Filter\/Basic\/Thumbnail.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["WebOptimization::__construct","Imagine\\Filter\\Basic\\WebOptimization","Imagine\/Filter\/Basic\/WebOptimization.html#method___construct","($path = null, array $options = array())","",2],["WebOptimization::apply","Imagine\\Filter\\Basic\\WebOptimization","Imagine\/Filter\/Basic\/WebOptimization.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["FilterInterface::apply","Imagine\\Filter\\FilterInterface","Imagine\/Filter\/FilterInterface.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["ImagineAware::setImagine","Imagine\\Filter\\ImagineAware","Imagine\/Filter\/ImagineAware.html#method_setImagine","(<a href=\"Imagine\/Image\/ImagineInterface.html\"><abbr title=\"Imagine\\Image\\ImagineInterface\">ImagineInterface<\/abbr><\/a> $imagine)","Set ImagineInterface instance.",2],["ImagineAware::getImagine","Imagine\\Filter\\ImagineAware","Imagine\/Filter\/ImagineAware.html#method_getImagine","()","Get ImagineInterface instance.",2],["Transformation::__construct","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method___construct","(<a href=\"Imagine\/Image\/ImagineInterface.html\"><abbr title=\"Imagine\\Image\\ImagineInterface\">ImagineInterface<\/abbr><\/a> $imagine = null)","Class constructor.",2],["Transformation::applyFilter","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_applyFilter","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Filter\/FilterInterface.html\"><abbr title=\"Imagine\\Filter\\FilterInterface\">FilterInterface<\/abbr><\/a> $filter)","Applies a given FilterInterface onto given ImageInterface",2],["Transformation::getFilters","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_getFilters","()","Returns a list of filters sorted by their priority.",2],["Transformation::apply","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_apply","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Applies scheduled transformation to ImageInterface",2],["Transformation::copy","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_copy","()","Copies current source image into a new ImageInterface",2],["Transformation::crop","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_crop","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Crops a specified box out of the source image (modifies",2],["Transformation::flipHorizontally","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_flipHorizontally","()","Flips current image using horizontal axis",2],["Transformation::flipVertically","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_flipVertically","()","Flips current image using vertical axis",2],["Transformation::strip","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_strip","()","Remove all profiles and comments",2],["Transformation::paste","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_paste","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start)","Pastes an image into a parent image Throws exceptions",2],["Transformation::applyMask","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_applyMask","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $mask)","Applies a given mask to current image's alpha channel",2],["Transformation::fill","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_fill","(<a href=\"Imagine\/Image\/Fill\/FillInterface.html\"><abbr title=\"Imagine\\Image\\Fill\\FillInterface\">FillInterface<\/abbr><\/a> $fill)","Fills image with provided filling, by replacing each",2],["Transformation::resize","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_resize","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $filter = ImageInterface::FILTER_UNDEFINED)","Resizes current image and returns self",2],["Transformation::rotate","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_rotate","(integer $angle, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $background = null)","Rotates an image at the given angle.",2],["Transformation::save","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_save","(string $path = null, array $options = array())","Saves the image at a specified path, the target file",2],["Transformation::show","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_show","(string $format, array $options = array())","Outputs the image content",2],["Transformation::thumbnail","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_thumbnail","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $mode = ImageInterface::THUMBNAIL_INSET, string $filter = ImageInterface::FILTER_UNDEFINED)","Generates a thumbnail from a current image Returns",2],["Transformation::add","Imagine\\Filter\\Transformation","Imagine\/Filter\/Transformation.html#method_add","(<a href=\"Imagine\/Filter\/FilterInterface.html\"><abbr title=\"Imagine\\Filter\\FilterInterface\">FilterInterface<\/abbr><\/a> $filter, int $priority)","Registers a given FilterInterface in an internal array",2],["Drawer::__construct","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method___construct","(resource $resource)","Constructs Drawer with a given gd image resource",2],["Drawer::arc","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_arc","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, integer $thickness = 1)","Draws an arc on a starting at a given x, y coordinates",2],["Drawer::chord","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_chord","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","This function does not work properly because of a bug",2],["Drawer::ellipse","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_ellipse","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws and ellipse with center at the given x, y coordinates,",2],["Drawer::line","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_line","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, integer $thickness = 1)","Draws a line from start(x, y) to end(x, y) coordinates",2],["Drawer::pieSlice","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_pieSlice","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but connects end points and the center",2],["Drawer::dot","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_dot","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","Places a one pixel point at specific coordinates and",2],["Drawer::polygon","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_polygon","(array $coordinates, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws a polygon using array of x, y coordinates.",2],["Drawer::text","Imagine\\Gd\\Drawer","Imagine\/Gd\/Drawer.html#method_text","(string $string, <a href=\"Imagine\/Image\/AbstractFont.html\"><abbr title=\"Imagine\\Image\\AbstractFont\">AbstractFont<\/abbr><\/a> $font, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, integer $angle, integer $width = null)","Annotates image with specified text at a given position",2],["Effects::__construct","Imagine\\Gd\\Effects","Imagine\/Gd\/Effects.html#method___construct","($resource)","",2],["Effects::gamma","Imagine\\Gd\\Effects","Imagine\/Gd\/Effects.html#method_gamma","(float $correction)","Apply gamma correction",2],["Effects::negative","Imagine\\Gd\\Effects","Imagine\/Gd\/Effects.html#method_negative","()","Invert the colors of the image",2],["Effects::grayscale","Imagine\\Gd\\Effects","Imagine\/Gd\/Effects.html#method_grayscale","()","Grayscale the image",2],["Effects::colorize","Imagine\\Gd\\Effects","Imagine\/Gd\/Effects.html#method_colorize","(<a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","Colorize the image",2],["Effects::sharpen","Imagine\\Gd\\Effects","Imagine\/Gd\/Effects.html#method_sharpen","()","Sharpens the image",2],["Effects::blur","Imagine\\Gd\\Effects","Imagine\/Gd\/Effects.html#method_blur","(float|int $sigma = 1)","Blur the image",2],["Font::box","Imagine\\Gd\\Font","Imagine\/Gd\/Font.html#method_box","(string $string, integer $angle)","Gets BoxInterface of font size on the image based on",2],["Image::__construct","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method___construct","(resource $resource, <a href=\"Imagine\/Image\/Palette\/PaletteInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\PaletteInterface\">PaletteInterface<\/abbr><\/a> $palette, <a href=\"Imagine\/Image\/Metadata\/MetadataBag.html\"><abbr title=\"Imagine\\Image\\Metadata\\MetadataBag\">MetadataBag<\/abbr><\/a> $metadata)","Constructs a new Image instance",2],["Image::__destruct","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method___destruct","()","Makes sure the current image resource is destroyed",2],["Image::getGdResource","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_getGdResource","()","Returns Gd resource",2],["Image::copy","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_copy","()","Copies current source image into a new ImageInterface",2],["Image::crop","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_crop","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Crops a specified box out of the source image (modifies",2],["Image::paste","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_paste","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start)","Pastes an image into a parent image Throws exceptions",2],["Image::resize","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_resize","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $filter = ImageInterface::FILTER_UNDEFINED)","Resizes current image and returns self",2],["Image::rotate","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_rotate","(integer $angle, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $background = null)","Rotates an image at the given angle.",2],["Image::save","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_save","(string $path = null, array $options = array())","Saves the image at a specified path, the target file",2],["Image::show","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_show","(string $format, array $options = array())","Outputs the image content",2],["Image::get","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_get","(string $format, array $options = array())","Returns the image content as a binary string",2],["Image::__toString","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method___toString","()","Returns the image content as a PNG binary string",2],["Image::flipHorizontally","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_flipHorizontally","()","Flips current image using horizontal axis",2],["Image::flipVertically","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_flipVertically","()","Flips current image using vertical axis",2],["Image::strip","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_strip","()","Remove all profiles and comments",2],["Image::draw","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_draw","()","Instantiates and returns a DrawerInterface instance",2],["Image::effects","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_effects","()","",2],["Image::getSize","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_getSize","()","Returns current image size",2],["Image::applyMask","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_applyMask","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $mask)","Applies a given mask to current image's alpha channel",2],["Image::fill","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_fill","(<a href=\"Imagine\/Image\/Fill\/FillInterface.html\"><abbr title=\"Imagine\\Image\\Fill\\FillInterface\">FillInterface<\/abbr><\/a> $fill)","Fills image with provided filling, by replacing each",2],["Image::mask","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_mask","()","Transforms creates a grayscale mask from current image,",2],["Image::histogram","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_histogram","()","Returns array of image colors as Imagine\\Image\\Palette\\Color\\ColorInterface",2],["Image::getColorAt","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_getColorAt","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $point)","Returns color at specified positions of current image",2],["Image::layers","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_layers","()","Returns the image layers when applicable.",2],["Image::interlace","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_interlace","(string $scheme)","Enables or disables interlacing",2],["Image::palette","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_palette","()","Return the current color palette",2],["Image::profile","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_profile","(<a href=\"Imagine\/Image\/ProfileInterface.html\"><abbr title=\"Imagine\\Image\\ProfileInterface\">ProfileInterface<\/abbr><\/a> $profile)","Applies a color profile on the Image",2],["Image::usePalette","Imagine\\Gd\\Image","Imagine\/Gd\/Image.html#method_usePalette","(<a href=\"Imagine\/Image\/Palette\/PaletteInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\PaletteInterface\">PaletteInterface<\/abbr><\/a> $palette)","Set a palette for the image.",2],["Imagine::__construct","Imagine\\Gd\\Imagine","Imagine\/Gd\/Imagine.html#method___construct","()","",2],["Imagine::create","Imagine\\Gd\\Imagine","Imagine\/Gd\/Imagine.html#method_create","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color = null)","Creates a new empty image with an optional background",2],["Imagine::open","Imagine\\Gd\\Imagine","Imagine\/Gd\/Imagine.html#method_open","(string $path)","Opens an existing image from $path",2],["Imagine::load","Imagine\\Gd\\Imagine","Imagine\/Gd\/Imagine.html#method_load","(string $string)","Loads an image from a binary $string",2],["Imagine::read","Imagine\\Gd\\Imagine","Imagine\/Gd\/Imagine.html#method_read","(resource $resource)","Loads an image from a resource $resource",2],["Imagine::font","Imagine\\Gd\\Imagine","Imagine\/Gd\/Imagine.html#method_font","(string $file, integer $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","Constructs a font with specified $file, $size and $color",2],["Layers::__construct","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method___construct","(<a href=\"Imagine\/Gd\/Image.html\"><abbr title=\"Imagine\\Gd\\Image\">Image<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/Palette\/PaletteInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\PaletteInterface\">PaletteInterface<\/abbr><\/a> $palette, $resource)","",2],["Layers::merge","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_merge","()","Merge layers into the original objects",2],["Layers::coalesce","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_coalesce","()","Coalesce layers.",2],["Layers::animate","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_animate","(string $format, integer $delay, integer $loops)","Animates layers",2],["Layers::current","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_current","()","{@inheritdoc}",2],["Layers::key","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_key","()","{@inheritdoc}",2],["Layers::next","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_next","()","{@inheritdoc}",2],["Layers::rewind","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_rewind","()","{@inheritdoc}",2],["Layers::valid","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_valid","()","{@inheritdoc}",2],["Layers::count","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_count","()","{@inheritdoc}",2],["Layers::offsetExists","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_offsetExists","($offset)","{@inheritdoc}",2],["Layers::offsetGet","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_offsetGet","($offset)","{@inheritdoc}",2],["Layers::offsetSet","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_offsetSet","($offset, $value)","{@inheritdoc}",2],["Layers::offsetUnset","Imagine\\Gd\\Layers","Imagine\/Gd\/Layers.html#method_offsetUnset","($offset)","{@inheritdoc}",2],["Drawer::__construct","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method___construct","(<abbr title=\"Imagine\\Gmagick\\Gmagick\">Gmagick<\/abbr> $gmagick)","",2],["Drawer::arc","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_arc","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, integer $thickness = 1)","Draws an arc on a starting at a given x, y coordinates",2],["Drawer::chord","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_chord","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but also connects end points with a straight",2],["Drawer::ellipse","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_ellipse","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws and ellipse with center at the given x, y coordinates,",2],["Drawer::line","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_line","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, integer $thickness = 1)","Draws a line from start(x, y) to end(x, y) coordinates",2],["Drawer::pieSlice","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_pieSlice","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but connects end points and the center",2],["Drawer::dot","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_dot","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","Places a one pixel point at specific coordinates and",2],["Drawer::polygon","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_polygon","(array $coordinates, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws a polygon using array of x, y coordinates.",2],["Drawer::text","Imagine\\Gmagick\\Drawer","Imagine\/Gmagick\/Drawer.html#method_text","(string $string, <a href=\"Imagine\/Image\/AbstractFont.html\"><abbr title=\"Imagine\\Image\\AbstractFont\">AbstractFont<\/abbr><\/a> $font, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, integer $angle, integer $width = null)","Annotates image with specified text at a given position",2],["Effects::__construct","Imagine\\Gmagick\\Effects","Imagine\/Gmagick\/Effects.html#method___construct","(<abbr title=\"Imagine\\Gmagick\\Gmagick\">Gmagick<\/abbr> $gmagick)","",2],["Effects::gamma","Imagine\\Gmagick\\Effects","Imagine\/Gmagick\/Effects.html#method_gamma","(float $correction)","Apply gamma correction",2],["Effects::negative","Imagine\\Gmagick\\Effects","Imagine\/Gmagick\/Effects.html#method_negative","()","Invert the colors of the image",2],["Effects::grayscale","Imagine\\Gmagick\\Effects","Imagine\/Gmagick\/Effects.html#method_grayscale","()","Grayscale the image",2],["Effects::colorize","Imagine\\Gmagick\\Effects","Imagine\/Gmagick\/Effects.html#method_colorize","(<a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","Colorize the image",2],["Effects::sharpen","Imagine\\Gmagick\\Effects","Imagine\/Gmagick\/Effects.html#method_sharpen","()","Sharpens the image",2],["Effects::blur","Imagine\\Gmagick\\Effects","Imagine\/Gmagick\/Effects.html#method_blur","(float|int $sigma = 1)","Blur the image",2],["Font::__construct","Imagine\\Gmagick\\Font","Imagine\/Gmagick\/Font.html#method___construct","(<abbr title=\"Imagine\\Gmagick\\Gmagick\">Gmagick<\/abbr> $gmagick, string $file, integer $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","",2],["Font::box","Imagine\\Gmagick\\Font","Imagine\/Gmagick\/Font.html#method_box","(string $string, integer $angle)","Gets BoxInterface of font size on the image based on",2],["Image::__construct","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method___construct","(<abbr title=\"Imagine\\Gmagick\\Gmagick\">Gmagick<\/abbr> $gmagick, <a href=\"Imagine\/Image\/Palette\/PaletteInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\PaletteInterface\">PaletteInterface<\/abbr><\/a> $palette, <a href=\"Imagine\/Image\/Metadata\/MetadataBag.html\"><abbr title=\"Imagine\\Image\\Metadata\\MetadataBag\">MetadataBag<\/abbr><\/a> $metadata)","Constructs a new Image instance",2],["Image::__destruct","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method___destruct","()","Destroys allocated gmagick resources",2],["Image::getGmagick","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_getGmagick","()","Returns gmagick instance",2],["Image::copy","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_copy","()","Copies current source image into a new ImageInterface",2],["Image::crop","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_crop","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Crops a specified box out of the source image (modifies",2],["Image::flipHorizontally","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_flipHorizontally","()","Flips current image using horizontal axis",2],["Image::flipVertically","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_flipVertically","()","Flips current image using vertical axis",2],["Image::strip","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_strip","()","Remove all profiles and comments",2],["Image::paste","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_paste","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start)","Pastes an image into a parent image Throws exceptions",2],["Image::resize","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_resize","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $filter = ImageInterface::FILTER_UNDEFINED)","Resizes current image and returns self",2],["Image::rotate","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_rotate","(integer $angle, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $background = null)","Rotates an image at the given angle.",2],["Image::save","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_save","(string $path = null, array $options = array())","Saves the image at a specified path, the target file",2],["Image::show","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_show","(string $format, array $options = array())","Outputs the image content",2],["Image::get","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_get","(string $format, array $options = array())","Returns the image content as a binary string",2],["Image::__toString","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method___toString","()","Returns the image content as a PNG binary string",2],["Image::draw","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_draw","()","Instantiates and returns a DrawerInterface instance",2],["Image::effects","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_effects","()","",2],["Image::getSize","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_getSize","()","Returns current image size",2],["Image::applyMask","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_applyMask","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $mask)","Applies a given mask to current image's alpha channel",2],["Image::mask","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_mask","()","Transforms creates a grayscale mask from current image,",2],["Image::fill","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_fill","(<a href=\"Imagine\/Image\/Fill\/FillInterface.html\"><abbr title=\"Imagine\\Image\\Fill\\FillInterface\">FillInterface<\/abbr><\/a> $fill)","Fills image with provided filling, by replacing each",2],["Image::histogram","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_histogram","()","Returns array of image colors as Imagine\\Image\\Palette\\Color\\ColorInterface",2],["Image::getColorAt","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_getColorAt","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $point)","Returns color at specified positions of current image",2],["Image::pixelToColor","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_pixelToColor","(<abbr title=\"Imagine\\Gmagick\\GmagickPixel\">GmagickPixel<\/abbr> $pixel)","Returns a color given a pixel, depending the Palette",2],["Image::layers","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_layers","()","Returns the image layers when applicable.",2],["Image::interlace","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_interlace","(string $scheme)","Enables or disables interlacing",2],["Image::usePalette","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_usePalette","(<a href=\"Imagine\/Image\/Palette\/PaletteInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\PaletteInterface\">PaletteInterface<\/abbr><\/a> $palette)","Set a palette for the image.",2],["Image::palette","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_palette","()","Return the current color palette",2],["Image::profile","Imagine\\Gmagick\\Image","Imagine\/Gmagick\/Image.html#method_profile","(<a href=\"Imagine\/Image\/ProfileInterface.html\"><abbr title=\"Imagine\\Image\\ProfileInterface\">ProfileInterface<\/abbr><\/a> $profile)","Applies a color profile on the Image",2],["Imagine::__construct","Imagine\\Gmagick\\Imagine","Imagine\/Gmagick\/Imagine.html#method___construct","()","",2],["Imagine::open","Imagine\\Gmagick\\Imagine","Imagine\/Gmagick\/Imagine.html#method_open","(string $path)","Opens an existing image from $path",2],["Imagine::create","Imagine\\Gmagick\\Imagine","Imagine\/Gmagick\/Imagine.html#method_create","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color = null)","Creates a new empty image with an optional background",2],["Imagine::load","Imagine\\Gmagick\\Imagine","Imagine\/Gmagick\/Imagine.html#method_load","(string $string)","Loads an image from a binary $string",2],["Imagine::read","Imagine\\Gmagick\\Imagine","Imagine\/Gmagick\/Imagine.html#method_read","(resource $resource)","Loads an image from a resource $resource",2],["Imagine::font","Imagine\\Gmagick\\Imagine","Imagine\/Gmagick\/Imagine.html#method_font","(string $file, integer $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","Constructs a font with specified $file, $size and $color",2],["Layers::__construct","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method___construct","(<a href=\"Imagine\/Gmagick\/Image.html\"><abbr title=\"Imagine\\Gmagick\\Image\">Image<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/Palette\/PaletteInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\PaletteInterface\">PaletteInterface<\/abbr><\/a> $palette, <abbr title=\"Imagine\\Gmagick\\Gmagick\">Gmagick<\/abbr> $resource)","",2],["Layers::merge","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_merge","()","Merge layers into the original objects",2],["Layers::coalesce","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_coalesce","()","Coalesce layers.",2],["Layers::animate","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_animate","(string $format, integer $delay, integer $loops)","Animates layers",2],["Layers::current","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_current","()","{@inheritdoc}",2],["Layers::key","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_key","()","{@inheritdoc}",2],["Layers::next","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_next","()","{@inheritdoc}",2],["Layers::rewind","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_rewind","()","{@inheritdoc}",2],["Layers::valid","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_valid","()","{@inheritdoc}",2],["Layers::count","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_count","()","{@inheritdoc}",2],["Layers::offsetExists","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_offsetExists","($offset)","{@inheritdoc}",2],["Layers::offsetGet","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_offsetGet","($offset)","{@inheritdoc}",2],["Layers::offsetSet","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_offsetSet","($offset, $image)","{@inheritdoc}",2],["Layers::offsetUnset","Imagine\\Gmagick\\Layers","Imagine\/Gmagick\/Layers.html#method_offsetUnset","($offset)","{@inheritdoc}",2],["AbstractFont::__construct","Imagine\\Image\\AbstractFont","Imagine\/Image\/AbstractFont.html#method___construct","(string $file, integer $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","Constructs a font with specified $file, $size and $color",2],["AbstractFont::getFile","Imagine\\Image\\AbstractFont","Imagine\/Image\/AbstractFont.html#method_getFile","()","Gets the fontfile for current font",2],["AbstractFont::getSize","Imagine\\Image\\AbstractFont","Imagine\/Image\/AbstractFont.html#method_getSize","()","Gets font's integer point size",2],["AbstractFont::getColor","Imagine\\Image\\AbstractFont","Imagine\/Image\/AbstractFont.html#method_getColor","()","Gets font's color",2],["AbstractImage::thumbnail","Imagine\\Image\\AbstractImage","Imagine\/Image\/AbstractImage.html#method_thumbnail","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $mode = ImageInterface::THUMBNAIL_INSET, string $filter = ImageInterface::FILTER_UNDEFINED)","Generates a thumbnail from a current image Returns",2],["AbstractImage::metadata","Imagine\\Image\\AbstractImage","Imagine\/Image\/AbstractImage.html#method_metadata","()","Returns the Image's meta data",2],["AbstractImage::__clone","Imagine\\Image\\AbstractImage","Imagine\/Image\/AbstractImage.html#method___clone","()","Assures the metadata instance will be cloned, too",2],["AbstractImagine::setMetadataReader","Imagine\\Image\\AbstractImagine","Imagine\/Image\/AbstractImagine.html#method_setMetadataReader","(<a href=\"Imagine\/Image\/Metadata\/MetadataReaderInterface.html\"><abbr title=\"Imagine\\Image\\Metadata\\MetadataReaderInterface\">MetadataReaderInterface<\/abbr><\/a> $metadataReader)","",2],["AbstractImagine::getMetadataReader","Imagine\\Image\\AbstractImagine","Imagine\/Image\/AbstractImagine.html#method_getMetadataReader","()","",2],["AbstractLayers::add","Imagine\\Image\\AbstractLayers","Imagine\/Image\/AbstractLayers.html#method_add","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Adds an image at the end of the layers stack",2],["AbstractLayers::set","Imagine\\Image\\AbstractLayers","Imagine\/Image\/AbstractLayers.html#method_set","(integer $offset, <a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Set an image at offset",2],["AbstractLayers::remove","Imagine\\Image\\AbstractLayers","Imagine\/Image\/AbstractLayers.html#method_remove","(integer $offset)","Removes the image at offset",2],["AbstractLayers::get","Imagine\\Image\\AbstractLayers","Imagine\/Image\/AbstractLayers.html#method_get","(integer $offset)","Returns the image at offset",2],["AbstractLayers::has","Imagine\\Image\\AbstractLayers","Imagine\/Image\/AbstractLayers.html#method_has","(integer $offset)","Returns true if a layer at offset is preset",2],["Box::__construct","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method___construct","(integer $width, integer $height)","Constructs the Size with given width and height",2],["Box::getWidth","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_getWidth","()","Gets current image width",2],["Box::getHeight","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_getHeight","()","Gets current image height",2],["Box::scale","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_scale","(float $ratio)","Creates new BoxInterface instance with ratios applied",2],["Box::increase","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_increase","(integer $size)","Creates new BoxInterface, adding given size to both",2],["Box::contains","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_contains","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $box, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start = null)","Checks whether current box can fit given box at a given",2],["Box::square","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_square","()","Gets current box square, useful for getting total number",2],["Box::__toString","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method___toString","()","Returns a string representation of the current box",2],["Box::widen","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_widen","(integer $width)","Resizes box to given width, constraining proportions",2],["Box::heighten","Imagine\\Image\\Box","Imagine\/Image\/Box.html#method_heighten","(integer $height)","Resizes box to given height, constraining proportions",2],["BoxInterface::getHeight","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_getHeight","()","Gets current image height",2],["BoxInterface::getWidth","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_getWidth","()","Gets current image width",2],["BoxInterface::scale","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_scale","(float $ratio)","Creates new BoxInterface instance with ratios applied",2],["BoxInterface::increase","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_increase","(integer $size)","Creates new BoxInterface, adding given size to both",2],["BoxInterface::contains","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_contains","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $box, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start = null)","Checks whether current box can fit given box at a given",2],["BoxInterface::square","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_square","()","Gets current box square, useful for getting total number",2],["BoxInterface::__toString","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method___toString","()","Returns a string representation of the current box",2],["BoxInterface::widen","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_widen","(integer $width)","Resizes box to given width, constraining proportions",2],["BoxInterface::heighten","Imagine\\Image\\BoxInterface","Imagine\/Image\/BoxInterface.html#method_heighten","(integer $height)","Resizes box to given height, constraining proportions",2],["FillInterface::getColor","Imagine\\Image\\Fill\\FillInterface","Imagine\/Image\/Fill\/FillInterface.html#method_getColor","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position)","Gets color of the fill for the given position",2],["Horizontal::getDistance","Imagine\\Image\\Fill\\Gradient\\Horizontal","Imagine\/Image\/Fill\/Gradient\/Horizontal.html#method_getDistance","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position)","{@inheritdoc}",2],["Linear::__construct","Imagine\\Image\\Fill\\Gradient\\Linear","Imagine\/Image\/Fill\/Gradient\/Linear.html#method___construct","(integer $length, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $end)","Constructs a linear gradient with overall gradient",2],["Linear::getColor","Imagine\\Image\\Fill\\Gradient\\Linear","Imagine\/Image\/Fill\/Gradient\/Linear.html#method_getColor","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position)","Gets color of the fill for the given position",2],["Linear::getStart","Imagine\\Image\\Fill\\Gradient\\Linear","Imagine\/Image\/Fill\/Gradient\/Linear.html#method_getStart","()","",2],["Linear::getEnd","Imagine\\Image\\Fill\\Gradient\\Linear","Imagine\/Image\/Fill\/Gradient\/Linear.html#method_getEnd","()","",2],["Vertical::getDistance","Imagine\\Image\\Fill\\Gradient\\Vertical","Imagine\/Image\/Fill\/Gradient\/Vertical.html#method_getDistance","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position)","{@inheritdoc}",2],["FontInterface::getFile","Imagine\\Image\\FontInterface","Imagine\/Image\/FontInterface.html#method_getFile","()","Gets the fontfile for current font",2],["FontInterface::getSize","Imagine\\Image\\FontInterface","Imagine\/Image\/FontInterface.html#method_getSize","()","Gets font's integer point size",2],["FontInterface::getColor","Imagine\\Image\\FontInterface","Imagine\/Image\/FontInterface.html#method_getColor","()","Gets font's color",2],["FontInterface::box","Imagine\\Image\\FontInterface","Imagine\/Image\/FontInterface.html#method_box","(string $string, integer $angle)","Gets BoxInterface of font size on the image based on",2],["Bucket::__construct","Imagine\\Image\\Histogram\\Bucket","Imagine\/Image\/Histogram\/Bucket.html#method___construct","(<a href=\"Imagine\/Image\/Histogram\/Range.html\"><abbr title=\"Imagine\\Image\\Histogram\\Range\">Range<\/abbr><\/a> $range, integer $count)","",2],["Bucket::add","Imagine\\Image\\Histogram\\Bucket","Imagine\/Image\/Histogram\/Bucket.html#method_add","(integer $value)","",2],["Bucket::count","Imagine\\Image\\Histogram\\Bucket","Imagine\/Image\/Histogram\/Bucket.html#method_count","()","",2],["Range::__construct","Imagine\\Image\\Histogram\\Range","Imagine\/Image\/Histogram\/Range.html#method___construct","(integer $start, integer $end)","",2],["Range::contains","Imagine\\Image\\Histogram\\Range","Imagine\/Image\/Histogram\/Range.html#method_contains","(integer $value)","",2],["ImageInterface::get","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_get","(string $format, array $options = array())","Returns the image content as a binary string",2],["ImageInterface::__toString","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method___toString","()","Returns the image content as a PNG binary string",2],["ImageInterface::draw","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_draw","()","Instantiates and returns a DrawerInterface instance",2],["ImageInterface::effects","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_effects","()","",2],["ImageInterface::getSize","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_getSize","()","Returns current image size",2],["ImageInterface::mask","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_mask","()","Transforms creates a grayscale mask from current image,",2],["ImageInterface::histogram","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_histogram","()","Returns array of image colors as Imagine\\Image\\Palette\\Color\\ColorInterface",2],["ImageInterface::getColorAt","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_getColorAt","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $point)","Returns color at specified positions of current image",2],["ImageInterface::layers","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_layers","()","Returns the image layers when applicable.",2],["ImageInterface::interlace","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_interlace","(string $scheme)","Enables or disables interlacing",2],["ImageInterface::palette","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_palette","()","Return the current color palette",2],["ImageInterface::usePalette","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_usePalette","(<a href=\"Imagine\/Image\/Palette\/PaletteInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\PaletteInterface\">PaletteInterface<\/abbr><\/a> $palette)","Set a palette for the image.",2],["ImageInterface::profile","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_profile","(<a href=\"Imagine\/Image\/ProfileInterface.html\"><abbr title=\"Imagine\\Image\\ProfileInterface\">ProfileInterface<\/abbr><\/a> $profile)","Applies a color profile on the Image",2],["ImageInterface::metadata","Imagine\\Image\\ImageInterface","Imagine\/Image\/ImageInterface.html#method_metadata","()","Returns the Image's meta data",2],["ImagineInterface::create","Imagine\\Image\\ImagineInterface","Imagine\/Image\/ImagineInterface.html#method_create","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color = null)","Creates a new empty image with an optional background",2],["ImagineInterface::open","Imagine\\Image\\ImagineInterface","Imagine\/Image\/ImagineInterface.html#method_open","(string $path)","Opens an existing image from $path",2],["ImagineInterface::load","Imagine\\Image\\ImagineInterface","Imagine\/Image\/ImagineInterface.html#method_load","(string $string)","Loads an image from a binary $string",2],["ImagineInterface::read","Imagine\\Image\\ImagineInterface","Imagine\/Image\/ImagineInterface.html#method_read","(resource $resource)","Loads an image from a resource $resource",2],["ImagineInterface::font","Imagine\\Image\\ImagineInterface","Imagine\/Image\/ImagineInterface.html#method_font","(string $file, integer $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","Constructs a font with specified $file, $size and $color",2],["LayersInterface::merge","Imagine\\Image\\LayersInterface","Imagine\/Image\/LayersInterface.html#method_merge","()","Merge layers into the original objects",2],["LayersInterface::animate","Imagine\\Image\\LayersInterface","Imagine\/Image\/LayersInterface.html#method_animate","(string $format, integer $delay, integer $loops)","Animates layers",2],["LayersInterface::coalesce","Imagine\\Image\\LayersInterface","Imagine\/Image\/LayersInterface.html#method_coalesce","()","Coalesce layers.",2],["LayersInterface::add","Imagine\\Image\\LayersInterface","Imagine\/Image\/LayersInterface.html#method_add","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Adds an image at the end of the layers stack",2],["LayersInterface::set","Imagine\\Image\\LayersInterface","Imagine\/Image\/LayersInterface.html#method_set","(integer $offset, <a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image)","Set an image at offset",2],["LayersInterface::remove","Imagine\\Image\\LayersInterface","Imagine\/Image\/LayersInterface.html#method_remove","(integer $offset)","Removes the image at offset",2],["LayersInterface::get","Imagine\\Image\\LayersInterface","Imagine\/Image\/LayersInterface.html#method_get","(integer $offset)","Returns the image at offset",2],["LayersInterface::has","Imagine\\Image\\LayersInterface","Imagine\/Image\/LayersInterface.html#method_has","(integer $offset)","Returns true if a layer at offset is preset",2],["ManipulatorInterface::copy","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_copy","()","Copies current source image into a new ImageInterface",2],["ManipulatorInterface::crop","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_crop","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Crops a specified box out of the source image (modifies",2],["ManipulatorInterface::resize","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_resize","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $filter = ImageInterface::FILTER_UNDEFINED)","Resizes current image and returns self",2],["ManipulatorInterface::rotate","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_rotate","(integer $angle, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $background = null)","Rotates an image at the given angle.",2],["ManipulatorInterface::paste","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_paste","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start)","Pastes an image into a parent image Throws exceptions",2],["ManipulatorInterface::save","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_save","(string $path = null, array $options = array())","Saves the image at a specified path, the target file",2],["ManipulatorInterface::show","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_show","(string $format, array $options = array())","Outputs the image content",2],["ManipulatorInterface::flipHorizontally","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_flipHorizontally","()","Flips current image using horizontal axis",2],["ManipulatorInterface::flipVertically","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_flipVertically","()","Flips current image using vertical axis",2],["ManipulatorInterface::strip","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_strip","()","Remove all profiles and comments",2],["ManipulatorInterface::thumbnail","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_thumbnail","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $mode = self::THUMBNAIL_INSET, string $filter = ImageInterface::FILTER_UNDEFINED)","Generates a thumbnail from a current image Returns",2],["ManipulatorInterface::applyMask","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_applyMask","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $mask)","Applies a given mask to current image's alpha channel",2],["ManipulatorInterface::fill","Imagine\\Image\\ManipulatorInterface","Imagine\/Image\/ManipulatorInterface.html#method_fill","(<a href=\"Imagine\/Image\/Fill\/FillInterface.html\"><abbr title=\"Imagine\\Image\\Fill\\FillInterface\">FillInterface<\/abbr><\/a> $fill)","Fills image with provided filling, by replacing each",2],["AbstractMetadataReader::readFile","Imagine\\Image\\Metadata\\AbstractMetadataReader","Imagine\/Image\/Metadata\/AbstractMetadataReader.html#method_readFile","(<abbr title=\"Imagine\\Image\\Metadata\\$file\">$file<\/abbr> $file)","Reads metadata from a file.",2],["AbstractMetadataReader::readData","Imagine\\Image\\Metadata\\AbstractMetadataReader","Imagine\/Image\/Metadata\/AbstractMetadataReader.html#method_readData","(<abbr title=\"Imagine\\Image\\Metadata\\$data\">$data<\/abbr> $data)","Reads metadata from a binary string.",2],["AbstractMetadataReader::readStream","Imagine\\Image\\Metadata\\AbstractMetadataReader","Imagine\/Image\/Metadata\/AbstractMetadataReader.html#method_readStream","(<abbr title=\"Imagine\\Image\\Metadata\\$resource\">$resource<\/abbr> $resource)","Reads metadata from a stream.",2],["ExifMetadataReader::__construct","Imagine\\Image\\Metadata\\ExifMetadataReader","Imagine\/Image\/Metadata\/ExifMetadataReader.html#method___construct","()","",2],["MetadataBag::__construct","Imagine\\Image\\Metadata\\MetadataBag","Imagine\/Image\/Metadata\/MetadataBag.html#method___construct","(array $data = array())","",2],["MetadataBag::getIterator","Imagine\\Image\\Metadata\\MetadataBag","Imagine\/Image\/Metadata\/MetadataBag.html#method_getIterator","()","{@inheritdoc}",2],["MetadataBag::offsetExists","Imagine\\Image\\Metadata\\MetadataBag","Imagine\/Image\/Metadata\/MetadataBag.html#method_offsetExists","($offset)","{@inheritdoc}",2],["MetadataBag::offsetSet","Imagine\\Image\\Metadata\\MetadataBag","Imagine\/Image\/Metadata\/MetadataBag.html#method_offsetSet","($offset, $value)","{@inheritdoc}",2],["MetadataBag::offsetUnset","Imagine\\Image\\Metadata\\MetadataBag","Imagine\/Image\/Metadata\/MetadataBag.html#method_offsetUnset","($offset)","{@inheritdoc}",2],["MetadataBag::offsetGet","Imagine\\Image\\Metadata\\MetadataBag","Imagine\/Image\/Metadata\/MetadataBag.html#method_offsetGet","($offset)","{@inheritdoc}",2],["MetadataBag::toArray","Imagine\\Image\\Metadata\\MetadataBag","Imagine\/Image\/Metadata\/MetadataBag.html#method_toArray","()","Returns metadata as an array",2],["MetadataReaderInterface::readFile","Imagine\\Image\\Metadata\\MetadataReaderInterface","Imagine\/Image\/Metadata\/MetadataReaderInterface.html#method_readFile","(<abbr title=\"Imagine\\Image\\Metadata\\$file\">$file<\/abbr> $file)","Reads metadata from a file.",2],["MetadataReaderInterface::readData","Imagine\\Image\\Metadata\\MetadataReaderInterface","Imagine\/Image\/Metadata\/MetadataReaderInterface.html#method_readData","(<abbr title=\"Imagine\\Image\\Metadata\\$data\">$data<\/abbr> $data)","Reads metadata from a binary string.",2],["MetadataReaderInterface::readStream","Imagine\\Image\\Metadata\\MetadataReaderInterface","Imagine\/Image\/Metadata\/MetadataReaderInterface.html#method_readStream","(<abbr title=\"Imagine\\Image\\Metadata\\$resource\">$resource<\/abbr> $resource)","Reads metadata from a stream.",2],["CMYK::__construct","Imagine\\Image\\Palette\\CMYK","Imagine\/Image\/Palette\/CMYK.html#method___construct","()","",2],["CMYK::name","Imagine\\Image\\Palette\\CMYK","Imagine\/Image\/Palette\/CMYK.html#method_name","()","Returns the name of this Palette, one of PaletteInterface::PALETTE_*",2],["CMYK::pixelDefinition","Imagine\\Image\\Palette\\CMYK","Imagine\/Image\/Palette\/CMYK.html#method_pixelDefinition","()","Returns an array containing ColorInterface::COLOR_*",2],["CMYK::supportsAlpha","Imagine\\Image\\Palette\\CMYK","Imagine\/Image\/Palette\/CMYK.html#method_supportsAlpha","()","Tells if alpha channel is supported in this palette",2],["CMYK::color","Imagine\\Image\\Palette\\CMYK","Imagine\/Image\/Palette\/CMYK.html#method_color","(string|array|integer $color, integer|null $alpha = null)","Returns a color given some values",2],["CMYK::blend","Imagine\\Image\\Palette\\CMYK","Imagine\/Image\/Palette\/CMYK.html#method_blend","(<a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color1, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color2, float $amount)","Blend two colors given an amount",2],["CMYK::useProfile","Imagine\\Image\\Palette\\CMYK","Imagine\/Image\/Palette\/CMYK.html#method_useProfile","(<a href=\"Imagine\/Image\/ProfileInterface.html\"><abbr title=\"Imagine\\Image\\ProfileInterface\">ProfileInterface<\/abbr><\/a> $profile)","Attachs an ICC profile to this Palette.",2],["CMYK::profile","Imagine\\Image\\Palette\\CMYK","Imagine\/Image\/Palette\/CMYK.html#method_profile","()","Returns the ICC profile attached to this Palette.",2],["ColorParser::parseToRGB","Imagine\\Image\\Palette\\ColorParser","Imagine\/Image\/Palette\/ColorParser.html#method_parseToRGB","(string|array|integer $color)","Parses a color to a RGB tuple",2],["ColorParser::parseToCMYK","Imagine\\Image\\Palette\\ColorParser","Imagine\/Image\/Palette\/ColorParser.html#method_parseToCMYK","(string|array|integer $color)","Parses a color to a CMYK tuple",2],["ColorParser::parseToGrayscale","Imagine\\Image\\Palette\\ColorParser","Imagine\/Image\/Palette\/ColorParser.html#method_parseToGrayscale","(string|array|integer $color)","Parses a color to a grayscale value",2],["CMYK::__construct","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method___construct","(<a href=\"Imagine\/Image\/Palette\/CMYK.html\"><abbr title=\"Imagine\\Image\\Palette\\CMYK\">CMYK<\/abbr><\/a> $palette, array $color)","",2],["CMYK::getValue","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method_getValue","(string $component)","Return the value of one of the component.",2],["CMYK::getCyan","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method_getCyan","()","Returns Cyan value of the color",2],["CMYK::getMagenta","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method_getMagenta","()","Returns Magenta value of the color",2],["CMYK::getYellow","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method_getYellow","()","Returns Yellow value of the color",2],["CMYK::getKeyline","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method_getKeyline","()","Returns Key value of the color",2],["CMYK::getPalette","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method_getPalette","()","Returns the palette attached to the current color",2],["CMYK::getAlpha","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method_getAlpha","()","Returns percentage of transparency of the color",2],["CMYK::dissolve","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method_dissolve","(integer $alpha)","Returns a copy of current color, incrementing the alpha",2],["CMYK::lighten","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method_lighten","(integer $shade)","Returns a copy of the current color, lightened by the",2],["CMYK::darken","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method_darken","(integer $shade)","Returns a copy of the current color, darkened by the",2],["CMYK::grayscale","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method_grayscale","()","Returns a gray related to the current color",2],["CMYK::isOpaque","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method_isOpaque","()","Checks if the current color is opaque",2],["CMYK::__toString","Imagine\\Image\\Palette\\Color\\CMYK","Imagine\/Image\/Palette\/Color\/CMYK.html#method___toString","()","Returns hex representation of the color",2],["ColorInterface::getValue","Imagine\\Image\\Palette\\Color\\ColorInterface","Imagine\/Image\/Palette\/Color\/ColorInterface.html#method_getValue","(string $component)","Return the value of one of the component.",2],["ColorInterface::getAlpha","Imagine\\Image\\Palette\\Color\\ColorInterface","Imagine\/Image\/Palette\/Color\/ColorInterface.html#method_getAlpha","()","Returns percentage of transparency of the color",2],["ColorInterface::getPalette","Imagine\\Image\\Palette\\Color\\ColorInterface","Imagine\/Image\/Palette\/Color\/ColorInterface.html#method_getPalette","()","Returns the palette attached to the current color",2],["ColorInterface::dissolve","Imagine\\Image\\Palette\\Color\\ColorInterface","Imagine\/Image\/Palette\/Color\/ColorInterface.html#method_dissolve","(integer $alpha)","Returns a copy of current color, incrementing the alpha",2],["ColorInterface::lighten","Imagine\\Image\\Palette\\Color\\ColorInterface","Imagine\/Image\/Palette\/Color\/ColorInterface.html#method_lighten","(integer $shade)","Returns a copy of the current color, lightened by the",2],["ColorInterface::darken","Imagine\\Image\\Palette\\Color\\ColorInterface","Imagine\/Image\/Palette\/Color\/ColorInterface.html#method_darken","(integer $shade)","Returns a copy of the current color, darkened by the",2],["ColorInterface::grayscale","Imagine\\Image\\Palette\\Color\\ColorInterface","Imagine\/Image\/Palette\/Color\/ColorInterface.html#method_grayscale","()","Returns a gray related to the current color",2],["ColorInterface::isOpaque","Imagine\\Image\\Palette\\Color\\ColorInterface","Imagine\/Image\/Palette\/Color\/ColorInterface.html#method_isOpaque","()","Checks if the current color is opaque",2],["Gray::__construct","Imagine\\Image\\Palette\\Color\\Gray","Imagine\/Image\/Palette\/Color\/Gray.html#method___construct","(<a href=\"Imagine\/Image\/Palette\/Grayscale.html\"><abbr title=\"Imagine\\Image\\Palette\\Grayscale\">Grayscale<\/abbr><\/a> $palette, array $color, $alpha)","",2],["Gray::getValue","Imagine\\Image\\Palette\\Color\\Gray","Imagine\/Image\/Palette\/Color\/Gray.html#method_getValue","(string $component)","Return the value of one of the component.",2],["Gray::getGray","Imagine\\Image\\Palette\\Color\\Gray","Imagine\/Image\/Palette\/Color\/Gray.html#method_getGray","()","Returns Gray value of the color",2],["Gray::getPalette","Imagine\\Image\\Palette\\Color\\Gray","Imagine\/Image\/Palette\/Color\/Gray.html#method_getPalette","()","Returns the palette attached to the current color",2],["Gray::getAlpha","Imagine\\Image\\Palette\\Color\\Gray","Imagine\/Image\/Palette\/Color\/Gray.html#method_getAlpha","()","Returns percentage of transparency of the color",2],["Gray::dissolve","Imagine\\Image\\Palette\\Color\\Gray","Imagine\/Image\/Palette\/Color\/Gray.html#method_dissolve","(integer $alpha)","Returns a copy of current color, incrementing the alpha",2],["Gray::lighten","Imagine\\Image\\Palette\\Color\\Gray","Imagine\/Image\/Palette\/Color\/Gray.html#method_lighten","(integer $shade)","Returns a copy of the current color, lightened by the",2],["Gray::darken","Imagine\\Image\\Palette\\Color\\Gray","Imagine\/Image\/Palette\/Color\/Gray.html#method_darken","(integer $shade)","Returns a copy of the current color, darkened by the",2],["Gray::grayscale","Imagine\\Image\\Palette\\Color\\Gray","Imagine\/Image\/Palette\/Color\/Gray.html#method_grayscale","()","Returns a gray related to the current color",2],["Gray::isOpaque","Imagine\\Image\\Palette\\Color\\Gray","Imagine\/Image\/Palette\/Color\/Gray.html#method_isOpaque","()","Checks if the current color is opaque",2],["Gray::__toString","Imagine\\Image\\Palette\\Color\\Gray","Imagine\/Image\/Palette\/Color\/Gray.html#method___toString","()","Returns hex representation of the color",2],["RGB::__construct","Imagine\\Image\\Palette\\Color\\RGB","Imagine\/Image\/Palette\/Color\/RGB.html#method___construct","(<a href=\"Imagine\/Image\/Palette\/RGB.html\"><abbr title=\"Imagine\\Image\\Palette\\RGB\">RGB<\/abbr><\/a> $palette, array $color, $alpha)","",2],["RGB::getValue","Imagine\\Image\\Palette\\Color\\RGB","Imagine\/Image\/Palette\/Color\/RGB.html#method_getValue","(string $component)","Return the value of one of the component.",2],["RGB::getRed","Imagine\\Image\\Palette\\Color\\RGB","Imagine\/Image\/Palette\/Color\/RGB.html#method_getRed","()","Returns RED value of the color",2],["RGB::getGreen","Imagine\\Image\\Palette\\Color\\RGB","Imagine\/Image\/Palette\/Color\/RGB.html#method_getGreen","()","Returns GREEN value of the color",2],["RGB::getBlue","Imagine\\Image\\Palette\\Color\\RGB","Imagine\/Image\/Palette\/Color\/RGB.html#method_getBlue","()","Returns BLUE value of the color",2],["RGB::getPalette","Imagine\\Image\\Palette\\Color\\RGB","Imagine\/Image\/Palette\/Color\/RGB.html#method_getPalette","()","Returns the palette attached to the current color",2],["RGB::getAlpha","Imagine\\Image\\Palette\\Color\\RGB","Imagine\/Image\/Palette\/Color\/RGB.html#method_getAlpha","()","Returns percentage of transparency of the color",2],["RGB::dissolve","Imagine\\Image\\Palette\\Color\\RGB","Imagine\/Image\/Palette\/Color\/RGB.html#method_dissolve","(integer $alpha)","Returns a copy of current color, incrementing the alpha",2],["RGB::lighten","Imagine\\Image\\Palette\\Color\\RGB","Imagine\/Image\/Palette\/Color\/RGB.html#method_lighten","(integer $shade)","Returns a copy of the current color, lightened by the",2],["RGB::darken","Imagine\\Image\\Palette\\Color\\RGB","Imagine\/Image\/Palette\/Color\/RGB.html#method_darken","(integer $shade)","Returns a copy of the current color, darkened by the",2],["RGB::grayscale","Imagine\\Image\\Palette\\Color\\RGB","Imagine\/Image\/Palette\/Color\/RGB.html#method_grayscale","()","Returns a gray related to the current color",2],["RGB::isOpaque","Imagine\\Image\\Palette\\Color\\RGB","Imagine\/Image\/Palette\/Color\/RGB.html#method_isOpaque","()","Checks if the current color is opaque",2],["RGB::__toString","Imagine\\Image\\Palette\\Color\\RGB","Imagine\/Image\/Palette\/Color\/RGB.html#method___toString","()","Returns hex representation of the color",2],["Grayscale::__construct","Imagine\\Image\\Palette\\Grayscale","Imagine\/Image\/Palette\/Grayscale.html#method___construct","()","",2],["Grayscale::name","Imagine\\Image\\Palette\\Grayscale","Imagine\/Image\/Palette\/Grayscale.html#method_name","()","Returns the name of this Palette, one of PaletteInterface::PALETTE_*",2],["Grayscale::pixelDefinition","Imagine\\Image\\Palette\\Grayscale","Imagine\/Image\/Palette\/Grayscale.html#method_pixelDefinition","()","Returns an array containing ColorInterface::COLOR_*",2],["Grayscale::supportsAlpha","Imagine\\Image\\Palette\\Grayscale","Imagine\/Image\/Palette\/Grayscale.html#method_supportsAlpha","()","Tells if alpha channel is supported in this palette",2],["Grayscale::useProfile","Imagine\\Image\\Palette\\Grayscale","Imagine\/Image\/Palette\/Grayscale.html#method_useProfile","(<a href=\"Imagine\/Image\/ProfileInterface.html\"><abbr title=\"Imagine\\Image\\ProfileInterface\">ProfileInterface<\/abbr><\/a> $profile)","Attachs an ICC profile to this Palette.",2],["Grayscale::profile","Imagine\\Image\\Palette\\Grayscale","Imagine\/Image\/Palette\/Grayscale.html#method_profile","()","Returns the ICC profile attached to this Palette.",2],["Grayscale::color","Imagine\\Image\\Palette\\Grayscale","Imagine\/Image\/Palette\/Grayscale.html#method_color","(string|array|integer $color, integer|null $alpha = null)","Returns a color given some values",2],["Grayscale::blend","Imagine\\Image\\Palette\\Grayscale","Imagine\/Image\/Palette\/Grayscale.html#method_blend","(<a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color1, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color2, float $amount)","Blend two colors given an amount",2],["PaletteInterface::color","Imagine\\Image\\Palette\\PaletteInterface","Imagine\/Image\/Palette\/PaletteInterface.html#method_color","(string|array|integer $color, integer|null $alpha = null)","Returns a color given some values",2],["PaletteInterface::blend","Imagine\\Image\\Palette\\PaletteInterface","Imagine\/Image\/Palette\/PaletteInterface.html#method_blend","(<a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color1, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color2, float $amount)","Blend two colors given an amount",2],["PaletteInterface::useProfile","Imagine\\Image\\Palette\\PaletteInterface","Imagine\/Image\/Palette\/PaletteInterface.html#method_useProfile","(<a href=\"Imagine\/Image\/ProfileInterface.html\"><abbr title=\"Imagine\\Image\\ProfileInterface\">ProfileInterface<\/abbr><\/a> $profile)","Attachs an ICC profile to this Palette.",2],["PaletteInterface::profile","Imagine\\Image\\Palette\\PaletteInterface","Imagine\/Image\/Palette\/PaletteInterface.html#method_profile","()","Returns the ICC profile attached to this Palette.",2],["PaletteInterface::name","Imagine\\Image\\Palette\\PaletteInterface","Imagine\/Image\/Palette\/PaletteInterface.html#method_name","()","Returns the name of this Palette, one of PaletteInterface::PALETTE_*",2],["PaletteInterface::pixelDefinition","Imagine\\Image\\Palette\\PaletteInterface","Imagine\/Image\/Palette\/PaletteInterface.html#method_pixelDefinition","()","Returns an array containing ColorInterface::COLOR_*",2],["PaletteInterface::supportsAlpha","Imagine\\Image\\Palette\\PaletteInterface","Imagine\/Image\/Palette\/PaletteInterface.html#method_supportsAlpha","()","Tells if alpha channel is supported in this palette",2],["RGB::__construct","Imagine\\Image\\Palette\\RGB","Imagine\/Image\/Palette\/RGB.html#method___construct","()","",2],["RGB::name","Imagine\\Image\\Palette\\RGB","Imagine\/Image\/Palette\/RGB.html#method_name","()","Returns the name of this Palette, one of PaletteInterface::PALETTE_*",2],["RGB::pixelDefinition","Imagine\\Image\\Palette\\RGB","Imagine\/Image\/Palette\/RGB.html#method_pixelDefinition","()","Returns an array containing ColorInterface::COLOR_*",2],["RGB::supportsAlpha","Imagine\\Image\\Palette\\RGB","Imagine\/Image\/Palette\/RGB.html#method_supportsAlpha","()","Tells if alpha channel is supported in this palette",2],["RGB::useProfile","Imagine\\Image\\Palette\\RGB","Imagine\/Image\/Palette\/RGB.html#method_useProfile","(<a href=\"Imagine\/Image\/ProfileInterface.html\"><abbr title=\"Imagine\\Image\\ProfileInterface\">ProfileInterface<\/abbr><\/a> $profile)","Attachs an ICC profile to this Palette.",2],["RGB::profile","Imagine\\Image\\Palette\\RGB","Imagine\/Image\/Palette\/RGB.html#method_profile","()","Returns the ICC profile attached to this Palette.",2],["RGB::color","Imagine\\Image\\Palette\\RGB","Imagine\/Image\/Palette\/RGB.html#method_color","(string|array|integer $color, integer|null $alpha = null)","Returns a color given some values",2],["RGB::blend","Imagine\\Image\\Palette\\RGB","Imagine\/Image\/Palette\/RGB.html#method_blend","(<a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color1, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color2, float $amount)","Blend two colors given an amount",2],["Point::__construct","Imagine\\Image\\Point","Imagine\/Image\/Point.html#method___construct","(integer $x, integer $y)","Constructs a point of coordinates",2],["Point::getX","Imagine\\Image\\Point","Imagine\/Image\/Point.html#method_getX","()","Gets points x coordinate",2],["Point::getY","Imagine\\Image\\Point","Imagine\/Image\/Point.html#method_getY","()","Gets points y coordinate",2],["Point::in","Imagine\\Image\\Point","Imagine\/Image\/Point.html#method_in","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $box)","Checks if current coordinate is inside a given bo",2],["Point::move","Imagine\\Image\\Point","Imagine\/Image\/Point.html#method_move","(integer $amount)","Returns another point, moved by a given amount from",2],["Point::__toString","Imagine\\Image\\Point","Imagine\/Image\/Point.html#method___toString","()","Gets a string representation for the current point",2],["PointInterface::getX","Imagine\\Image\\PointInterface","Imagine\/Image\/PointInterface.html#method_getX","()","Gets points x coordinate",2],["PointInterface::getY","Imagine\\Image\\PointInterface","Imagine\/Image\/PointInterface.html#method_getY","()","Gets points y coordinate",2],["PointInterface::in","Imagine\\Image\\PointInterface","Imagine\/Image\/PointInterface.html#method_in","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $box)","Checks if current coordinate is inside a given bo",2],["PointInterface::move","Imagine\\Image\\PointInterface","Imagine\/Image\/PointInterface.html#method_move","(integer $amount)","Returns another point, moved by a given amount from",2],["PointInterface::__toString","Imagine\\Image\\PointInterface","Imagine\/Image\/PointInterface.html#method___toString","()","Gets a string representation for the current point",2],["Center::__construct","Imagine\\Image\\Point\\Center","Imagine\/Image\/Point\/Center.html#method___construct","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $box)","Constructs coordinate with size instance, it needs",2],["Center::getX","Imagine\\Image\\Point\\Center","Imagine\/Image\/Point\/Center.html#method_getX","()","Gets points x coordinate",2],["Center::getY","Imagine\\Image\\Point\\Center","Imagine\/Image\/Point\/Center.html#method_getY","()","Gets points y coordinate",2],["Center::in","Imagine\\Image\\Point\\Center","Imagine\/Image\/Point\/Center.html#method_in","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $box)","Checks if current coordinate is inside a given bo",2],["Center::move","Imagine\\Image\\Point\\Center","Imagine\/Image\/Point\/Center.html#method_move","(integer $amount)","Returns another point, moved by a given amount from",2],["Center::__toString","Imagine\\Image\\Point\\Center","Imagine\/Image\/Point\/Center.html#method___toString","()","Gets a string representation for the current point",2],["Profile::__construct","Imagine\\Image\\Profile","Imagine\/Image\/Profile.html#method___construct","($name, $data)","",2],["Profile::name","Imagine\\Image\\Profile","Imagine\/Image\/Profile.html#method_name","()","Returns the name of the profile",2],["Profile::data","Imagine\\Image\\Profile","Imagine\/Image\/Profile.html#method_data","()","Returns the profile data",2],["Profile::fromPath","Imagine\\Image\\Profile","Imagine\/Image\/Profile.html#method_fromPath","(String $path)","Creates a profile from a path to a file",2],["ProfileInterface::name","Imagine\\Image\\ProfileInterface","Imagine\/Image\/ProfileInterface.html#method_name","()","Returns the name of the profile",2],["ProfileInterface::data","Imagine\\Image\\ProfileInterface","Imagine\/Image\/ProfileInterface.html#method_data","()","Returns the profile data",2],["Drawer::__construct","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method___construct","(<abbr title=\"Imagine\\Imagick\\Imagick\">Imagick<\/abbr> $imagick)","",2],["Drawer::arc","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_arc","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, integer $thickness = 1)","Draws an arc on a starting at a given x, y coordinates",2],["Drawer::chord","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_chord","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but also connects end points with a straight",2],["Drawer::ellipse","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_ellipse","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws and ellipse with center at the given x, y coordinates,",2],["Drawer::line","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_line","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, integer $thickness = 1)","Draws a line from start(x, y) to end(x, y) coordinates",2],["Drawer::pieSlice","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_pieSlice","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $center, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, integer $start, integer $end, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Same as arc, but connects end points and the center",2],["Drawer::dot","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_dot","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","Places a one pixel point at specific coordinates and",2],["Drawer::polygon","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_polygon","(array $coordinates, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color, Boolean $fill = false, integer $thickness = 1)","Draws a polygon using array of x, y coordinates.",2],["Drawer::text","Imagine\\Imagick\\Drawer","Imagine\/Imagick\/Drawer.html#method_text","(string $string, <a href=\"Imagine\/Image\/AbstractFont.html\"><abbr title=\"Imagine\\Image\\AbstractFont\">AbstractFont<\/abbr><\/a> $font, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $position, integer $angle, integer $width = null)","Annotates image with specified text at a given position",2],["Effects::__construct","Imagine\\Imagick\\Effects","Imagine\/Imagick\/Effects.html#method___construct","(<abbr title=\"Imagine\\Imagick\\Imagick\">Imagick<\/abbr> $imagick)","",2],["Effects::gamma","Imagine\\Imagick\\Effects","Imagine\/Imagick\/Effects.html#method_gamma","(float $correction)","Apply gamma correction",2],["Effects::negative","Imagine\\Imagick\\Effects","Imagine\/Imagick\/Effects.html#method_negative","()","Invert the colors of the image",2],["Effects::grayscale","Imagine\\Imagick\\Effects","Imagine\/Imagick\/Effects.html#method_grayscale","()","Grayscale the image",2],["Effects::colorize","Imagine\\Imagick\\Effects","Imagine\/Imagick\/Effects.html#method_colorize","(<a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","Colorize the image",2],["Effects::sharpen","Imagine\\Imagick\\Effects","Imagine\/Imagick\/Effects.html#method_sharpen","()","Sharpens the image",2],["Effects::blur","Imagine\\Imagick\\Effects","Imagine\/Imagick\/Effects.html#method_blur","(float|int $sigma = 1)","Blur the image",2],["Font::__construct","Imagine\\Imagick\\Font","Imagine\/Imagick\/Font.html#method___construct","(<abbr title=\"Imagine\\Imagick\\Imagick\">Imagick<\/abbr> $imagick, string $file, integer $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","",2],["Font::box","Imagine\\Imagick\\Font","Imagine\/Imagick\/Font.html#method_box","(string $string, integer $angle)","Gets BoxInterface of font size on the image based on",2],["Image::__construct","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method___construct","(<abbr title=\"Imagine\\Imagick\\Imagick\">Imagick<\/abbr> $imagick, <a href=\"Imagine\/Image\/Palette\/PaletteInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\PaletteInterface\">PaletteInterface<\/abbr><\/a> $palette, <a href=\"Imagine\/Image\/Metadata\/MetadataBag.html\"><abbr title=\"Imagine\\Image\\Metadata\\MetadataBag\">MetadataBag<\/abbr><\/a> $metadata)","Constructs a new Image instance",2],["Image::__destruct","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method___destruct","()","Destroys allocated imagick resources",2],["Image::getImagick","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_getImagick","()","Returns the underlying \\Imagick instance",2],["Image::copy","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_copy","()","Copies current source image into a new ImageInterface",2],["Image::crop","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_crop","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start, <a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size)","Crops a specified box out of the source image (modifies",2],["Image::flipHorizontally","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_flipHorizontally","()","Flips current image using horizontal axis",2],["Image::flipVertically","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_flipVertically","()","Flips current image using vertical axis",2],["Image::strip","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_strip","()","Remove all profiles and comments",2],["Image::paste","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_paste","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $start)","Pastes an image into a parent image Throws exceptions",2],["Image::resize","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_resize","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, string $filter = ImageInterface::FILTER_UNDEFINED)","Resizes current image and returns self",2],["Image::rotate","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_rotate","(integer $angle, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $background = null)","Rotates an image at the given angle.",2],["Image::save","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_save","(string $path = null, array $options = array())","Saves the image at a specified path, the target file",2],["Image::show","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_show","(string $format, array $options = array())","Outputs the image content",2],["Image::get","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_get","(string $format, array $options = array())","Returns the image content as a binary string",2],["Image::interlace","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_interlace","(string $scheme)","Enables or disables interlacing",2],["Image::__toString","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method___toString","()","Returns the image content as a PNG binary string",2],["Image::draw","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_draw","()","Instantiates and returns a DrawerInterface instance",2],["Image::effects","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_effects","()","",2],["Image::getSize","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_getSize","()","Returns current image size",2],["Image::applyMask","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_applyMask","(<a href=\"Imagine\/Image\/ImageInterface.html\"><abbr title=\"Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr><\/a> $mask)","Applies a given mask to current image's alpha channel",2],["Image::mask","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_mask","()","Transforms creates a grayscale mask from current image,",2],["Image::fill","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_fill","(<a href=\"Imagine\/Image\/Fill\/FillInterface.html\"><abbr title=\"Imagine\\Image\\Fill\\FillInterface\">FillInterface<\/abbr><\/a> $fill)","Fills image with provided filling, by replacing each",2],["Image::histogram","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_histogram","()","Returns array of image colors as Imagine\\Image\\Palette\\Color\\ColorInterface",2],["Image::getColorAt","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_getColorAt","(<a href=\"Imagine\/Image\/PointInterface.html\"><abbr title=\"Imagine\\Image\\PointInterface\">PointInterface<\/abbr><\/a> $point)","Returns color at specified positions of current image",2],["Image::pixelToColor","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_pixelToColor","(<abbr title=\"Imagine\\Imagick\\ImagickPixel\">ImagickPixel<\/abbr> $pixel)","Returns a color given a pixel, depending the Palette",2],["Image::layers","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_layers","()","Returns the image layers when applicable.",2],["Image::usePalette","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_usePalette","(<a href=\"Imagine\/Image\/Palette\/PaletteInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\PaletteInterface\">PaletteInterface<\/abbr><\/a> $palette)","Set a palette for the image.",2],["Image::palette","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_palette","()","Return the current color palette",2],["Image::profile","Imagine\\Imagick\\Image","Imagine\/Imagick\/Image.html#method_profile","(<a href=\"Imagine\/Image\/ProfileInterface.html\"><abbr title=\"Imagine\\Image\\ProfileInterface\">ProfileInterface<\/abbr><\/a> $profile)","Applies a color profile on the Image",2],["Imagine::__construct","Imagine\\Imagick\\Imagine","Imagine\/Imagick\/Imagine.html#method___construct","()","",2],["Imagine::open","Imagine\\Imagick\\Imagine","Imagine\/Imagick\/Imagine.html#method_open","(string $path)","Opens an existing image from $path",2],["Imagine::create","Imagine\\Imagick\\Imagine","Imagine\/Imagick\/Imagine.html#method_create","(<a href=\"Imagine\/Image\/BoxInterface.html\"><abbr title=\"Imagine\\Image\\BoxInterface\">BoxInterface<\/abbr><\/a> $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color = null)","Creates a new empty image with an optional background",2],["Imagine::load","Imagine\\Imagick\\Imagine","Imagine\/Imagick\/Imagine.html#method_load","(string $string)","Loads an image from a binary $string",2],["Imagine::read","Imagine\\Imagick\\Imagine","Imagine\/Imagick\/Imagine.html#method_read","(resource $resource)","Loads an image from a resource $resource",2],["Imagine::font","Imagine\\Imagick\\Imagine","Imagine\/Imagick\/Imagine.html#method_font","(string $file, integer $size, <a href=\"Imagine\/Image\/Palette\/Color\/ColorInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\Color\\ColorInterface\">ColorInterface<\/abbr><\/a> $color)","Constructs a font with specified $file, $size and $color",2],["Layers::__construct","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method___construct","(<a href=\"Imagine\/Imagick\/Image.html\"><abbr title=\"Imagine\\Imagick\\Image\">Image<\/abbr><\/a> $image, <a href=\"Imagine\/Image\/Palette\/PaletteInterface.html\"><abbr title=\"Imagine\\Image\\Palette\\PaletteInterface\">PaletteInterface<\/abbr><\/a> $palette, <abbr title=\"Imagine\\Imagick\\Imagick\">Imagick<\/abbr> $resource)","",2],["Layers::merge","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_merge","()","Merge layers into the original objects",2],["Layers::animate","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_animate","(string $format, integer $delay, integer $loops)","Animates layers",2],["Layers::coalesce","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_coalesce","()","Coalesce layers.",2],["Layers::current","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_current","()","{@inheritdoc}",2],["Layers::key","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_key","()","{@inheritdoc}",2],["Layers::next","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_next","()","{@inheritdoc}",2],["Layers::rewind","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_rewind","()","{@inheritdoc}",2],["Layers::valid","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_valid","()","{@inheritdoc}",2],["Layers::count","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_count","()","{@inheritdoc}",2],["Layers::offsetExists","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_offsetExists","($offset)","{@inheritdoc}",2],["Layers::offsetGet","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_offsetGet","($offset)","{@inheritdoc}",2],["Layers::offsetSet","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_offsetSet","($offset, $image)","{@inheritdoc}",2],["Layers::offsetUnset","Imagine\\Imagick\\Layers","Imagine\/Imagick\/Layers.html#method_offsetUnset","($offset)","{@inheritdoc}",2],["IsImageEqual::__construct","Imagine\\Test\\Constraint\\IsImageEqual","Imagine\/Test\/Constraint\/IsImageEqual.html#method___construct","(<abbr title=\"Imagine\\Test\\Constraint\\Imagine\\Image\\ImageInterface\">ImageInterface<\/abbr> $value, float $delta = 0.1, integer $buckets = 4)","",2],["IsImageEqual::evaluate","Imagine\\Test\\Constraint\\IsImageEqual","Imagine\/Test\/Constraint\/IsImageEqual.html#method_evaluate","($other)","{@inheritdoc}",2],["IsImageEqual::toString","Imagine\\Test\\Constraint\\IsImageEqual","Imagine\/Test\/Constraint\/IsImageEqual.html#method_toString","()","{@inheritdoc}",2],["ImagineTestCase::assertImageEquals","Imagine\\Test\\ImagineTestCase","Imagine\/Test\/ImagineTestCase.html#method_assertImageEquals","(<abbr title=\"Imagine\\Test\\ImageInterface\">ImageInterface<\/abbr> $expected, <abbr title=\"Imagine\\Test\\ImageInterface\">ImageInterface<\/abbr> $actual, string $message = &#039;&#039;, float $delta = 0.1, integer $buckets = 4)","Asserts that two images are equal using color histogram",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']